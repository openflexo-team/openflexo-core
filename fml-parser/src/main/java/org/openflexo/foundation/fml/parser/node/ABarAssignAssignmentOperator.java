/* This file was generated by SableCC (http://www.sablecc.org/). */

package org.openflexo.foundation.fml.parser.node;

import org.openflexo.foundation.fml.parser.analysis.*;

@SuppressWarnings("nls")
public final class ABarAssignAssignmentOperator extends PAssignmentOperator
{
    private TBarAssign _barAssign_;

    public ABarAssignAssignmentOperator()
    {
        // Constructor
    }

    public ABarAssignAssignmentOperator(
        @SuppressWarnings("hiding") TBarAssign _barAssign_)
    {
        // Constructor
        setBarAssign(_barAssign_);

    }

    @Override
    public Object clone()
    {
        return new ABarAssignAssignmentOperator(
            cloneNode(this._barAssign_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseABarAssignAssignmentOperator(this);
    }

    public TBarAssign getBarAssign()
    {
        return this._barAssign_;
    }

    public void setBarAssign(TBarAssign node)
    {
        if(this._barAssign_ != null)
        {
            this._barAssign_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._barAssign_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._barAssign_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._barAssign_ == child)
        {
            this._barAssign_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._barAssign_ == oldChild)
        {
            setBarAssign((TBarAssign) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
