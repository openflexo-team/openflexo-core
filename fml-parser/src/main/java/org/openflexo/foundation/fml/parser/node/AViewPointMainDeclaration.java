/* This file was generated by SableCC (http://www.sablecc.org/). */

package org.openflexo.foundation.fml.parser.node;

import org.openflexo.foundation.fml.parser.analysis.*;

@SuppressWarnings("nls")
public final class AViewPointMainDeclaration extends PMainDeclaration
{
    private PViewpointDeclaration _viewpointDeclaration_;

    public AViewPointMainDeclaration()
    {
        // Constructor
    }

    public AViewPointMainDeclaration(
        @SuppressWarnings("hiding") PViewpointDeclaration _viewpointDeclaration_)
    {
        // Constructor
        setViewpointDeclaration(_viewpointDeclaration_);

    }

    @Override
    public Object clone()
    {
        return new AViewPointMainDeclaration(
            cloneNode(this._viewpointDeclaration_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAViewPointMainDeclaration(this);
    }

    public PViewpointDeclaration getViewpointDeclaration()
    {
        return this._viewpointDeclaration_;
    }

    public void setViewpointDeclaration(PViewpointDeclaration node)
    {
        if(this._viewpointDeclaration_ != null)
        {
            this._viewpointDeclaration_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._viewpointDeclaration_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._viewpointDeclaration_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._viewpointDeclaration_ == child)
        {
            this._viewpointDeclaration_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._viewpointDeclaration_ == oldChild)
        {
            setViewpointDeclaration((PViewpointDeclaration) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
