/* This file was generated by SableCC (http://www.sablecc.org/). */

package org.openflexo.foundation.fml.parser.node;

import org.openflexo.foundation.fml.parser.analysis.*;

@SuppressWarnings("nls")
public final class ALabelStatement extends PStatement
{
    private PLabeledStatement _labeledStatement_;

    public ALabelStatement()
    {
        // Constructor
    }

    public ALabelStatement(
        @SuppressWarnings("hiding") PLabeledStatement _labeledStatement_)
    {
        // Constructor
        setLabeledStatement(_labeledStatement_);

    }

    @Override
    public Object clone()
    {
        return new ALabelStatement(
            cloneNode(this._labeledStatement_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseALabelStatement(this);
    }

    public PLabeledStatement getLabeledStatement()
    {
        return this._labeledStatement_;
    }

    public void setLabeledStatement(PLabeledStatement node)
    {
        if(this._labeledStatement_ != null)
        {
            this._labeledStatement_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._labeledStatement_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._labeledStatement_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._labeledStatement_ == child)
        {
            this._labeledStatement_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._labeledStatement_ == oldChild)
        {
            setLabeledStatement((PLabeledStatement) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
