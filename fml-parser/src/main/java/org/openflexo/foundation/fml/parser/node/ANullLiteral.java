/* This file was generated by SableCC (http://www.sablecc.org/). */

package org.openflexo.foundation.fml.parser.node;

import org.openflexo.foundation.fml.parser.analysis.*;

@SuppressWarnings("nls")
public final class ANullLiteral extends PLiteral
{
    private TNullLiteral _nullLiteral_;

    public ANullLiteral()
    {
        // Constructor
    }

    public ANullLiteral(
        @SuppressWarnings("hiding") TNullLiteral _nullLiteral_)
    {
        // Constructor
        setNullLiteral(_nullLiteral_);

    }

    @Override
    public Object clone()
    {
        return new ANullLiteral(
            cloneNode(this._nullLiteral_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseANullLiteral(this);
    }

    public TNullLiteral getNullLiteral()
    {
        return this._nullLiteral_;
    }

    public void setNullLiteral(TNullLiteral node)
    {
        if(this._nullLiteral_ != null)
        {
            this._nullLiteral_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._nullLiteral_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._nullLiteral_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._nullLiteral_ == child)
        {
            this._nullLiteral_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._nullLiteral_ == oldChild)
        {
            setNullLiteral((TNullLiteral) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
