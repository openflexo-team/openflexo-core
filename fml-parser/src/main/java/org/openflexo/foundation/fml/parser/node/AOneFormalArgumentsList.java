/* This file was generated by SableCC (http://www.sablecc.org/). */

package org.openflexo.foundation.fml.parser.node;

import org.openflexo.foundation.fml.parser.analysis.*;

@SuppressWarnings("nls")
public final class AOneFormalArgumentsList extends PFormalArgumentsList
{
    private PFormalArgument _formalArgument_;

    public AOneFormalArgumentsList()
    {
        // Constructor
    }

    public AOneFormalArgumentsList(
        @SuppressWarnings("hiding") PFormalArgument _formalArgument_)
    {
        // Constructor
        setFormalArgument(_formalArgument_);

    }

    @Override
    public Object clone()
    {
        return new AOneFormalArgumentsList(
            cloneNode(this._formalArgument_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAOneFormalArgumentsList(this);
    }

    public PFormalArgument getFormalArgument()
    {
        return this._formalArgument_;
    }

    public void setFormalArgument(PFormalArgument node)
    {
        if(this._formalArgument_ != null)
        {
            this._formalArgument_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._formalArgument_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._formalArgument_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._formalArgument_ == child)
        {
            this._formalArgument_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._formalArgument_ == oldChild)
        {
            setFormalArgument((PFormalArgument) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
