/* This file was generated by SableCC (http://www.sablecc.org/). */

package org.openflexo.foundation.fml.parser.lexer;

import java.io.*;
import org.openflexo.foundation.fml.parser.node.*;

@SuppressWarnings("nls")
public class Lexer
{
    protected Token token;
    protected State state = State.INITIAL;

    private PushbackReader in;
    private int line;
    private int pos;
    private boolean cr;
    private boolean eof;
    private final StringBuffer text = new StringBuffer();

    @SuppressWarnings("unused")
    protected void filter() throws LexerException, IOException
    {
        // Do nothing
    }

    public Lexer(@SuppressWarnings("hiding") PushbackReader in)
    {
        this.in = in;
    }
 
    public Token peek() throws LexerException, IOException
    {
        while(this.token == null)
        {
            this.token = getToken();
            filter();
        }

        return this.token;
    }

    public Token next() throws LexerException, IOException
    {
        while(this.token == null)
        {
            this.token = getToken();
            filter();
        }

        Token result = this.token;
        this.token = null;
        return result;
    }

    protected Token getToken() throws IOException, LexerException
    {
        int dfa_state = 0;

        int start_pos = this.pos;
        int start_line = this.line;

        int accept_state = -1;
        int accept_token = -1;
        int accept_length = -1;
        int accept_pos = -1;
        int accept_line = -1;

        @SuppressWarnings("hiding") int[][][] gotoTable = Lexer.gotoTable[this.state.id()];
        @SuppressWarnings("hiding") int[] accept = Lexer.accept[this.state.id()];
        this.text.setLength(0);

        while(true)
        {
            int c = getChar();

            if(c != -1)
            {
                switch(c)
                {
                case 10:
                    if(this.cr)
                    {
                        this.cr = false;
                    }
                    else
                    {
                        this.line++;
                        this.pos = 0;
                    }
                    break;
                case 13:
                    this.line++;
                    this.pos = 0;
                    this.cr = true;
                    break;
                default:
                    this.pos++;
                    this.cr = false;
                    break;
                }

                this.text.append((char) c);

                do
                {
                    int oldState = (dfa_state < -1) ? (-2 -dfa_state) : dfa_state;

                    dfa_state = -1;

                    int[][] tmp1 =  gotoTable[oldState];
                    int low = 0;
                    int high = tmp1.length - 1;

                    while(low <= high)
                    {
                        int middle = (low + high) / 2;
                        int[] tmp2 = tmp1[middle];

                        if(c < tmp2[0])
                        {
                            high = middle - 1;
                        }
                        else if(c > tmp2[1])
                        {
                            low = middle + 1;
                        }
                        else
                        {
                            dfa_state = tmp2[2];
                            break;
                        }
                    }
                }while(dfa_state < -1);
            }
            else
            {
                dfa_state = -1;
            }

            if(dfa_state >= 0)
            {
                if(accept[dfa_state] != -1)
                {
                    accept_state = dfa_state;
                    accept_token = accept[dfa_state];
                    accept_length = this.text.length();
                    accept_pos = this.pos;
                    accept_line = this.line;
                }
            }
            else
            {
                if(accept_state != -1)
                {
                    switch(accept_token)
                    {
                    case 0:
                        {
                            @SuppressWarnings("hiding") Token token = new0(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 1:
                        {
                            @SuppressWarnings("hiding") Token token = new1(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 2:
                        {
                            @SuppressWarnings("hiding") Token token = new2(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 3:
                        {
                            @SuppressWarnings("hiding") Token token = new3(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 4:
                        {
                            @SuppressWarnings("hiding") Token token = new4(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 5:
                        {
                            @SuppressWarnings("hiding") Token token = new5(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 6:
                        {
                            @SuppressWarnings("hiding") Token token = new6(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 7:
                        {
                            @SuppressWarnings("hiding") Token token = new7(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 8:
                        {
                            @SuppressWarnings("hiding") Token token = new8(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 9:
                        {
                            @SuppressWarnings("hiding") Token token = new9(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 10:
                        {
                            @SuppressWarnings("hiding") Token token = new10(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 11:
                        {
                            @SuppressWarnings("hiding") Token token = new11(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 12:
                        {
                            @SuppressWarnings("hiding") Token token = new12(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 13:
                        {
                            @SuppressWarnings("hiding") Token token = new13(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 14:
                        {
                            @SuppressWarnings("hiding") Token token = new14(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 15:
                        {
                            @SuppressWarnings("hiding") Token token = new15(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 16:
                        {
                            @SuppressWarnings("hiding") Token token = new16(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 17:
                        {
                            @SuppressWarnings("hiding") Token token = new17(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 18:
                        {
                            @SuppressWarnings("hiding") Token token = new18(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 19:
                        {
                            @SuppressWarnings("hiding") Token token = new19(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 20:
                        {
                            @SuppressWarnings("hiding") Token token = new20(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 21:
                        {
                            @SuppressWarnings("hiding") Token token = new21(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 22:
                        {
                            @SuppressWarnings("hiding") Token token = new22(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 23:
                        {
                            @SuppressWarnings("hiding") Token token = new23(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 24:
                        {
                            @SuppressWarnings("hiding") Token token = new24(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 25:
                        {
                            @SuppressWarnings("hiding") Token token = new25(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 26:
                        {
                            @SuppressWarnings("hiding") Token token = new26(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 27:
                        {
                            @SuppressWarnings("hiding") Token token = new27(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 28:
                        {
                            @SuppressWarnings("hiding") Token token = new28(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 29:
                        {
                            @SuppressWarnings("hiding") Token token = new29(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 30:
                        {
                            @SuppressWarnings("hiding") Token token = new30(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 31:
                        {
                            @SuppressWarnings("hiding") Token token = new31(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 32:
                        {
                            @SuppressWarnings("hiding") Token token = new32(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 33:
                        {
                            @SuppressWarnings("hiding") Token token = new33(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 34:
                        {
                            @SuppressWarnings("hiding") Token token = new34(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 35:
                        {
                            @SuppressWarnings("hiding") Token token = new35(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 36:
                        {
                            @SuppressWarnings("hiding") Token token = new36(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 37:
                        {
                            @SuppressWarnings("hiding") Token token = new37(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 38:
                        {
                            @SuppressWarnings("hiding") Token token = new38(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 39:
                        {
                            @SuppressWarnings("hiding") Token token = new39(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 40:
                        {
                            @SuppressWarnings("hiding") Token token = new40(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 41:
                        {
                            @SuppressWarnings("hiding") Token token = new41(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 42:
                        {
                            @SuppressWarnings("hiding") Token token = new42(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 43:
                        {
                            @SuppressWarnings("hiding") Token token = new43(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 44:
                        {
                            @SuppressWarnings("hiding") Token token = new44(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 45:
                        {
                            @SuppressWarnings("hiding") Token token = new45(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 46:
                        {
                            @SuppressWarnings("hiding") Token token = new46(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 47:
                        {
                            @SuppressWarnings("hiding") Token token = new47(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 48:
                        {
                            @SuppressWarnings("hiding") Token token = new48(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 49:
                        {
                            @SuppressWarnings("hiding") Token token = new49(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 50:
                        {
                            @SuppressWarnings("hiding") Token token = new50(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 51:
                        {
                            @SuppressWarnings("hiding") Token token = new51(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 52:
                        {
                            @SuppressWarnings("hiding") Token token = new52(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 53:
                        {
                            @SuppressWarnings("hiding") Token token = new53(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 54:
                        {
                            @SuppressWarnings("hiding") Token token = new54(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 55:
                        {
                            @SuppressWarnings("hiding") Token token = new55(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 56:
                        {
                            @SuppressWarnings("hiding") Token token = new56(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 57:
                        {
                            @SuppressWarnings("hiding") Token token = new57(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 58:
                        {
                            @SuppressWarnings("hiding") Token token = new58(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 59:
                        {
                            @SuppressWarnings("hiding") Token token = new59(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 60:
                        {
                            @SuppressWarnings("hiding") Token token = new60(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 61:
                        {
                            @SuppressWarnings("hiding") Token token = new61(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 62:
                        {
                            @SuppressWarnings("hiding") Token token = new62(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 63:
                        {
                            @SuppressWarnings("hiding") Token token = new63(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 64:
                        {
                            @SuppressWarnings("hiding") Token token = new64(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 65:
                        {
                            @SuppressWarnings("hiding") Token token = new65(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 66:
                        {
                            @SuppressWarnings("hiding") Token token = new66(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 67:
                        {
                            @SuppressWarnings("hiding") Token token = new67(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 68:
                        {
                            @SuppressWarnings("hiding") Token token = new68(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 69:
                        {
                            @SuppressWarnings("hiding") Token token = new69(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 70:
                        {
                            @SuppressWarnings("hiding") Token token = new70(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 71:
                        {
                            @SuppressWarnings("hiding") Token token = new71(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 72:
                        {
                            @SuppressWarnings("hiding") Token token = new72(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 73:
                        {
                            @SuppressWarnings("hiding") Token token = new73(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 74:
                        {
                            @SuppressWarnings("hiding") Token token = new74(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 75:
                        {
                            @SuppressWarnings("hiding") Token token = new75(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 76:
                        {
                            @SuppressWarnings("hiding") Token token = new76(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 77:
                        {
                            @SuppressWarnings("hiding") Token token = new77(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 78:
                        {
                            @SuppressWarnings("hiding") Token token = new78(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 79:
                        {
                            @SuppressWarnings("hiding") Token token = new79(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 80:
                        {
                            @SuppressWarnings("hiding") Token token = new80(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 81:
                        {
                            @SuppressWarnings("hiding") Token token = new81(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 82:
                        {
                            @SuppressWarnings("hiding") Token token = new82(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 83:
                        {
                            @SuppressWarnings("hiding") Token token = new83(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 84:
                        {
                            @SuppressWarnings("hiding") Token token = new84(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 85:
                        {
                            @SuppressWarnings("hiding") Token token = new85(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 86:
                        {
                            @SuppressWarnings("hiding") Token token = new86(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 87:
                        {
                            @SuppressWarnings("hiding") Token token = new87(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 88:
                        {
                            @SuppressWarnings("hiding") Token token = new88(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 89:
                        {
                            @SuppressWarnings("hiding") Token token = new89(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 90:
                        {
                            @SuppressWarnings("hiding") Token token = new90(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 91:
                        {
                            @SuppressWarnings("hiding") Token token = new91(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 92:
                        {
                            @SuppressWarnings("hiding") Token token = new92(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 93:
                        {
                            @SuppressWarnings("hiding") Token token = new93(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 94:
                        {
                            @SuppressWarnings("hiding") Token token = new94(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 95:
                        {
                            @SuppressWarnings("hiding") Token token = new95(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 96:
                        {
                            @SuppressWarnings("hiding") Token token = new96(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 97:
                        {
                            @SuppressWarnings("hiding") Token token = new97(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 98:
                        {
                            @SuppressWarnings("hiding") Token token = new98(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 99:
                        {
                            @SuppressWarnings("hiding") Token token = new99(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 100:
                        {
                            @SuppressWarnings("hiding") Token token = new100(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 101:
                        {
                            @SuppressWarnings("hiding") Token token = new101(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 102:
                        {
                            @SuppressWarnings("hiding") Token token = new102(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 103:
                        {
                            @SuppressWarnings("hiding") Token token = new103(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 104:
                        {
                            @SuppressWarnings("hiding") Token token = new104(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 105:
                        {
                            @SuppressWarnings("hiding") Token token = new105(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 106:
                        {
                            @SuppressWarnings("hiding") Token token = new106(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 107:
                        {
                            @SuppressWarnings("hiding") Token token = new107(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 108:
                        {
                            @SuppressWarnings("hiding") Token token = new108(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 109:
                        {
                            @SuppressWarnings("hiding") Token token = new109(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 110:
                        {
                            @SuppressWarnings("hiding") Token token = new110(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 111:
                        {
                            @SuppressWarnings("hiding") Token token = new111(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 112:
                        {
                            @SuppressWarnings("hiding") Token token = new112(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 113:
                        {
                            @SuppressWarnings("hiding") Token token = new113(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 114:
                        {
                            @SuppressWarnings("hiding") Token token = new114(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 115:
                        {
                            @SuppressWarnings("hiding") Token token = new115(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 116:
                        {
                            @SuppressWarnings("hiding") Token token = new116(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 117:
                        {
                            @SuppressWarnings("hiding") Token token = new117(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 118:
                        {
                            @SuppressWarnings("hiding") Token token = new118(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 119:
                        {
                            @SuppressWarnings("hiding") Token token = new119(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    }
                }
                else
                {
                    if(this.text.length() > 0)
                    {
                        throw new LexerException(
                            "[" + (start_line + 1) + "," + (start_pos + 1) + "]" +
                            " Unknown token: " + this.text);
                    }

                    @SuppressWarnings("hiding") EOF token = new EOF(
                        start_line + 1,
                        start_pos + 1);
                    return token;
                }
            }
        }
    }

    Token new0(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TAt(line, pos); }
    Token new1(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TComma(line, pos); }
    Token new2(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TDot(line, pos); }
    Token new3(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TDotDotDot(line, pos); }
    Token new4(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TLBkt(line, pos); }
    Token new5(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TLBrc(line, pos); }
    Token new6(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TLPar(line, pos); }
    Token new7(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TRBkt(line, pos); }
    Token new8(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TRBrc(line, pos); }
    Token new9(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TRPar(line, pos); }
    Token new10(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TSemi(line, pos); }
    Token new11(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TAmp(line, pos); }
    Token new12(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TAmpAmp(line, pos); }
    Token new13(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TAmpAssign(line, pos); }
    Token new14(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TAssign(line, pos); }
    Token new15(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TBar(line, pos); }
    Token new16(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TBarAssign(line, pos); }
    Token new17(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TBarBar(line, pos); }
    Token new18(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TCaret(line, pos); }
    Token new19(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TCaretAssign(line, pos); }
    Token new20(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TColon(line, pos); }
    Token new21(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TEmark(line, pos); }
    Token new22(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TEq(line, pos); }
    Token new23(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TGt(line, pos); }
    Token new24(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TGteq(line, pos); }
    Token new25(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TLt(line, pos); }
    Token new26(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TLteq(line, pos); }
    Token new27(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TMinus(line, pos); }
    Token new28(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TMinusAssign(line, pos); }
    Token new29(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TMinusMinus(line, pos); }
    Token new30(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TNeq(line, pos); }
    Token new31(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TPercent(line, pos); }
    Token new32(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TPercentAssign(line, pos); }
    Token new33(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TPlus(line, pos); }
    Token new34(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TPlusAssign(line, pos); }
    Token new35(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TPlusPlus(line, pos); }
    Token new36(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TQmark(line, pos); }
    Token new37(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TShl(line, pos); }
    Token new38(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TShlAssign(line, pos); }
    Token new39(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TShr(line, pos); }
    Token new40(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TShrAssign(line, pos); }
    Token new41(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TSlash(line, pos); }
    Token new42(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TSlashAssign(line, pos); }
    Token new43(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TStar(line, pos); }
    Token new44(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TStarAssign(line, pos); }
    Token new45(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TTilde(line, pos); }
    Token new46(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TUshr(line, pos); }
    Token new47(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TUshrAssign(line, pos); }
    Token new48(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TAbstract(line, pos); }
    Token new49(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TAssert(line, pos); }
    Token new50(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TBoolean(line, pos); }
    Token new51(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TBreak(line, pos); }
    Token new52(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TByte(line, pos); }
    Token new53(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TCase(line, pos); }
    Token new54(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TCatch(line, pos); }
    Token new55(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TChar(line, pos); }
    Token new56(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TClassToken(line, pos); }
    Token new57(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TConst(line, pos); }
    Token new58(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TContinue(line, pos); }
    Token new59(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TDefault(line, pos); }
    Token new60(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TDo(line, pos); }
    Token new61(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TDouble(line, pos); }
    Token new62(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TElse(line, pos); }
    Token new63(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TEnum(line, pos); }
    Token new64(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TExtends(line, pos); }
    Token new65(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TFalse(line, pos); }
    Token new66(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TFinal(line, pos); }
    Token new67(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TFinallyToken(line, pos); }
    Token new68(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TFloat(line, pos); }
    Token new69(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TFor(line, pos); }
    Token new70(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TGoto(line, pos); }
    Token new71(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TIf(line, pos); }
    Token new72(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TImplements(line, pos); }
    Token new73(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TInstanceof(line, pos); }
    Token new74(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TInt(line, pos); }
    Token new75(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TInterface(line, pos); }
    Token new76(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TLong(line, pos); }
    Token new77(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TNative(line, pos); }
    Token new78(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TNew(line, pos); }
    Token new79(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TPackage(line, pos); }
    Token new80(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TPrivate(line, pos); }
    Token new81(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TProtected(line, pos); }
    Token new82(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TPublic(line, pos); }
    Token new83(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TReturn(line, pos); }
    Token new84(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TShort(line, pos); }
    Token new85(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TStatic(line, pos); }
    Token new86(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TStrictfp(line, pos); }
    Token new87(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TSuperToken(line, pos); }
    Token new88(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TSwitch(line, pos); }
    Token new89(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TSynchronized(line, pos); }
    Token new90(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TThis(line, pos); }
    Token new91(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TThrow(line, pos); }
    Token new92(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TThrowsToken(line, pos); }
    Token new93(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TTransient(line, pos); }
    Token new94(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TTrue(line, pos); }
    Token new95(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TTry(line, pos); }
    Token new96(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TVoid(line, pos); }
    Token new97(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TVolatile(line, pos); }
    Token new98(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TWhile(line, pos); }
    Token new99(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TNamespace(line, pos); }
    Token new100(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TViewpoint(line, pos); }
    Token new101(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TVirtualmodel(line, pos); }
    Token new102(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TUse(line, pos); }
    Token new103(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TAs(line, pos); }
    Token new104(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TImport(line, pos); }
    Token new105(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TModelslot(line, pos); }
    Token new106(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TFlexoconcept(line, pos); }
    Token new107(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TRole(line, pos); }
    Token new108(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TCharacterLiteral(text, line, pos); }
    Token new109(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TFloatingPointLiteral(text, line, pos); }
    Token new110(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TIntegerLiteral(text, line, pos); }
    Token new111(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TNullLiteral(line, pos); }
    Token new112(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TStringLiteral(text, line, pos); }
    Token new113(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TIdentifier(text, line, pos); }
    Token new114(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TWhiteSpace(text, line, pos); }
    Token new115(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TTraditionalComment(text, line, pos); }
    Token new116(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TDocumentationComment(text, line, pos); }
    Token new117(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TEndOfLineComment(text, line, pos); }
    Token new118(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TUrl(text, line, pos); }
    Token new119(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TTaIdentifier(text, line, pos); }

    private int getChar() throws IOException
    {
        if(this.eof)
        {
            return -1;
        }

        int result = this.in.read();

        if(result == -1)
        {
            this.eof = true;
        }

        return result;
    }

    private void pushBack(int acceptLength) throws IOException
    {
        int length = this.text.length();
        for(int i = length - 1; i >= acceptLength; i--)
        {
            this.eof = false;

            this.in.unread(this.text.charAt(i));
        }
    }

    protected void unread(@SuppressWarnings("hiding") Token token) throws IOException
    {
        @SuppressWarnings("hiding") String text = token.getText();
        int length = text.length();

        for(int i = length - 1; i >= 0; i--)
        {
            this.eof = false;

            this.in.unread(text.charAt(i));
        }

        this.pos = token.getPos() - 1;
        this.line = token.getLine() - 1;
    }

    private String getText(int acceptLength)
    {
        StringBuffer s = new StringBuffer(acceptLength);
        for(int i = 0; i < acceptLength; i++)
        {
            s.append(this.text.charAt(i));
        }

        return s.toString();
    }

    private static int[][][][] gotoTable;
/*  {
        { // INITIAL
            {{9, 9, 1}, {10, 10, 2}, {12, 12, 3}, {13, 13, 4}, {32, 32, 5}, {33, 33, 6}, {34, 34, 7}, {36, 36, 8}, {37, 37, 9}, {38, 38, 10}, {39, 39, 11}, {40, 40, 12}, {41, 41, 13}, {42, 42, 14}, {43, 43, 15}, {44, 44, 16}, {45, 45, 17}, {46, 46, 18}, {47, 47, 19}, {48, 48, 20}, {49, 57, 21}, {58, 58, 22}, {59, 59, 23}, {60, 60, 24}, {61, 61, 25}, {62, 62, 26}, {63, 63, 27}, {64, 64, 28}, {65, 69, 29}, {70, 70, 30}, {71, 76, 29}, {77, 77, 31}, {78, 81, 29}, {82, 82, 32}, {83, 85, 29}, {86, 86, 33}, {87, 90, 29}, {91, 91, 34}, {93, 93, 35}, {94, 94, 36}, {95, 95, 37}, {97, 97, 38}, {98, 98, 39}, {99, 99, 40}, {100, 100, 41}, {101, 101, 42}, {102, 102, 43}, {103, 103, 44}, {104, 104, 45}, {105, 105, 46}, {106, 107, 47}, {108, 108, 48}, {109, 109, 47}, {110, 110, 49}, {111, 111, 47}, {112, 112, 50}, {113, 113, 47}, {114, 114, 51}, {115, 115, 52}, {116, 116, 53}, {117, 117, 54}, {118, 118, 55}, {119, 119, 56}, {120, 122, 47}, {123, 123, 57}, {124, 124, 58}, {125, 125, 59}, {126, 126, 60}, {170, 170, 61}, {181, 181, 62}, {186, 186, 63}, {192, 214, 64}, {216, 246, 65}, {248, 501, 66}, {506, 535, 67}, {592, 680, 68}, {688, 696, 69}, {699, 705, 70}, {720, 721, 71}, {736, 740, 72}, {890, 890, 73}, {902, 902, 74}, {904, 906, 75}, {908, 908, 76}, {910, 929, 77}, {931, 974, 78}, {976, 982, 79}, {986, 986, 80}, {988, 988, 81}, {990, 990, 82}, {992, 992, 83}, {994, 1011, 84}, {1025, 1036, 85}, {1038, 1103, 86}, {1105, 1116, 87}, {1118, 1153, 88}, {1168, 1220, 89}, {1223, 1224, 90}, {1227, 1228, 91}, {1232, 1259, 92}, {1262, 1269, 93}, {1272, 1273, 94}, {1329, 1366, 95}, {1369, 1369, 96}, {1377, 1415, 97}, {1488, 1514, 98}, {1520, 1522, 99}, {1569, 1594, 100}, {1600, 1610, 101}, {1649, 1719, 102}, {1722, 1726, 103}, {1728, 1742, 104}, {1744, 1747, 105}, {1749, 1749, 106}, {1765, 1766, 107}, {2309, 2361, 108}, {2365, 2365, 109}, {2392, 2401, 110}, {2437, 2444, 111}, {2447, 2448, 112}, {2451, 2472, 113}, {2474, 2480, 114}, {2482, 2482, 115}, {2486, 2489, 116}, {2524, 2525, 117}, {2527, 2529, 118}, {2544, 2545, 119}, {2565, 2570, 120}, {2575, 2576, 121}, {2579, 2600, 122}, {2602, 2608, 123}, {2610, 2611, 124}, {2613, 2614, 125}, {2616, 2617, 126}, {2649, 2652, 127}, {2654, 2654, 128}, {2674, 2676, 129}, {2693, 2699, 130}, {2701, 2701, 131}, {2703, 2705, 132}, {2707, 2728, 133}, {2730, 2736, 134}, {2738, 2739, 135}, {2741, 2745, 136}, {2749, 2749, 137}, {2784, 2784, 138}, {2821, 2828, 139}, {2831, 2832, 140}, {2835, 2856, 141}, {2858, 2864, 142}, {2866, 2867, 143}, {2870, 2873, 144}, {2877, 2877, 145}, {2908, 2909, 146}, {2911, 2913, 147}, {2949, 2954, 148}, {2958, 2960, 149}, {2962, 2965, 150}, {2969, 2970, 151}, {2972, 2972, 152}, {2974, 2975, 153}, {2979, 2980, 154}, {2984, 2986, 155}, {2990, 2997, 156}, {2999, 3001, 157}, {3077, 3084, 158}, {3086, 3088, 159}, {3090, 3112, 160}, {3114, 3123, 161}, {3125, 3129, 162}, {3168, 3169, 163}, {3205, 3212, 164}, {3214, 3216, 165}, {3218, 3240, 166}, {3242, 3251, 167}, {3253, 3257, 168}, {3294, 3294, 169}, {3296, 3297, 170}, {3333, 3340, 171}, {3342, 3344, 172}, {3346, 3368, 173}, {3370, 3385, 174}, {3424, 3425, 175}, {3585, 3630, 176}, {3632, 3632, 177}, {3634, 3635, 178}, {3648, 3654, 179}, {3713, 3714, 180}, {3716, 3716, 181}, {3719, 3720, 182}, {3722, 3722, 183}, {3725, 3725, 184}, {3732, 3735, 185}, {3737, 3743, 186}, {3745, 3747, 187}, {3749, 3749, 188}, {3751, 3751, 189}, {3754, 3755, 190}, {3757, 3758, 191}, {3760, 3760, 192}, {3762, 3763, 193}, {3773, 3773, 194}, {3776, 3780, 195}, {3782, 3782, 196}, {3804, 3805, 197}, {3904, 3911, 198}, {3913, 3945, 199}, {4256, 4293, 200}, {4304, 4342, 201}, {4352, 4441, 202}, {4447, 4514, 203}, {4520, 4601, 204}, {7680, 7835, 205}, {7840, 7929, 206}, {7936, 7957, 207}, {7960, 7965, 208}, {7968, 8005, 209}, {8008, 8013, 210}, {8016, 8023, 211}, {8025, 8025, 212}, {8027, 8027, 213}, {8029, 8029, 214}, {8031, 8061, 215}, {8064, 8116, 216}, {8118, 8124, 217}, {8126, 8126, 218}, {8130, 8132, 219}, {8134, 8140, 220}, {8144, 8147, 221}, {8150, 8155, 222}, {8160, 8172, 223}, {8178, 8180, 224}, {8182, 8188, 225}, {8319, 8319, 226}, {8450, 8450, 227}, {8455, 8455, 228}, {8458, 8467, 229}, {8469, 8469, 230}, {8472, 8477, 231}, {8484, 8484, 232}, {8486, 8486, 233}, {8488, 8488, 234}, {8490, 8497, 235}, {8499, 8504, 236}, {12293, 12293, 237}, {12337, 12341, 238}, {12353, 12436, 239}, {12443, 12446, 240}, {12449, 12538, 241}, {12540, 12542, 242}, {12549, 12588, 243}, {12593, 12686, 244}, {19968, 40869, 245}, {44032, 55203, 246}, {63744, 64045, 247}, {64256, 64262, 248}, {64275, 64279, 249}, {64287, 64296, 250}, {64298, 64310, 251}, {64312, 64316, 252}, {64318, 64318, 253}, {64320, 64321, 254}, {64323, 64324, 255}, {64326, 64433, 256}, {64467, 64829, 257}, {64848, 64911, 258}, {64914, 64967, 259}, {65008, 65019, 260}, {65136, 65138, 261}, {65140, 65140, 262}, {65142, 65276, 263}, {65313, 65338, 264}, {65345, 65370, 265}, {65382, 65470, 266}, {65474, 65479, 267}, {65482, 65487, 268}, {65490, 65495, 269}, {65498, 65500, 270}, },
            {{9, 32, -2}, },
            {{9, 32, -2}, },
            {{9, 32, -2}, },
            {{9, 9, 1}, {10, 10, 271}, {12, 32, -2}, },
            {{9, 32, -2}, },
            {{61, 61, 272}, },
            {{0, 9, 273}, {11, 12, 273}, {14, 33, 273}, {34, 34, 274}, {35, 91, 273}, {92, 92, 275}, {93, 65535, 273}, },
            {{36, 36, 276}, {48, 57, 277}, {58, 58, 278}, {65, 90, 279}, {95, 95, 280}, {97, 122, 281}, {170, 170, 282}, {181, 181, 283}, {186, 186, 284}, {192, 214, 285}, {216, 246, 286}, {248, 501, 287}, {506, 535, 288}, {592, 680, 289}, {688, 696, 290}, {699, 705, 291}, {720, 721, 292}, {736, 740, 293}, {890, 890, 294}, {902, 902, 295}, {904, 906, 296}, {908, 908, 297}, {910, 929, 298}, {931, 974, 299}, {976, 982, 300}, {986, 986, 301}, {988, 988, 302}, {990, 990, 303}, {992, 992, 304}, {994, 1011, 305}, {1025, 1036, 306}, {1038, 1103, 307}, {1105, 1116, 308}, {1118, 1153, 309}, {1168, 1220, 310}, {1223, 1224, 311}, {1227, 1228, 312}, {1232, 1259, 313}, {1262, 1269, 314}, {1272, 1273, 315}, {1329, 1366, 316}, {1369, 1369, 317}, {1377, 1415, 318}, {1488, 1514, 319}, {1520, 1522, 320}, {1569, 1594, 321}, {1600, 1610, 322}, {1632, 1641, 323}, {1649, 1719, 324}, {1722, 1726, 325}, {1728, 1742, 326}, {1744, 1747, 327}, {1749, 1749, 328}, {1765, 1766, 329}, {1776, 1785, 330}, {2309, 2361, 331}, {2365, 2365, 332}, {2392, 2401, 333}, {2406, 2415, 334}, {2437, 2444, 335}, {2447, 2448, 336}, {2451, 2472, 337}, {2474, 2480, 338}, {2482, 2482, 339}, {2486, 2489, 340}, {2524, 2525, 341}, {2527, 2529, 342}, {2534, 2543, 343}, {2544, 2545, 344}, {2565, 2570, 345}, {2575, 2576, 346}, {2579, 2600, 347}, {2602, 2608, 348}, {2610, 2611, 349}, {2613, 2614, 350}, {2616, 2617, 351}, {2649, 2652, 352}, {2654, 2654, 353}, {2662, 2671, 354}, {2674, 2676, 355}, {2693, 2699, 356}, {2701, 2701, 357}, {2703, 2705, 358}, {2707, 2728, 359}, {2730, 2736, 360}, {2738, 2739, 361}, {2741, 2745, 362}, {2749, 2749, 363}, {2784, 2784, 364}, {2790, 2799, 365}, {2821, 2828, 366}, {2831, 2832, 367}, {2835, 2856, 368}, {2858, 2864, 369}, {2866, 2867, 370}, {2870, 2873, 371}, {2877, 2877, 372}, {2908, 2909, 373}, {2911, 2913, 374}, {2918, 2927, 375}, {2949, 2954, 376}, {2958, 2960, 377}, {2962, 2965, 378}, {2969, 2970, 379}, {2972, 2972, 380}, {2974, 2975, 381}, {2979, 2980, 382}, {2984, 2986, 383}, {2990, 2997, 384}, {2999, 3001, 385}, {3047, 3055, 386}, {3077, 3084, 387}, {3086, 3088, 388}, {3090, 3112, 389}, {3114, 3123, 390}, {3125, 3129, 391}, {3168, 3169, 392}, {3174, 3183, 393}, {3205, 3212, 394}, {3214, 3216, 395}, {3218, 3240, 396}, {3242, 3251, 397}, {3253, 3257, 398}, {3294, 3294, 399}, {3296, 3297, 400}, {3302, 3311, 401}, {3333, 3340, 402}, {3342, 3344, 403}, {3346, 3368, 404}, {3370, 3385, 405}, {3424, 3425, 406}, {3430, 3439, 407}, {3585, 3630, 408}, {3632, 3632, 409}, {3634, 3635, 410}, {3648, 3654, 411}, {3664, 3673, 412}, {3713, 3714, 413}, {3716, 3716, 414}, {3719, 3720, 415}, {3722, 3722, 416}, {3725, 3725, 417}, {3732, 3735, 418}, {3737, 3743, 419}, {3745, 3747, 420}, {3749, 3749, 421}, {3751, 3751, 422}, {3754, 3755, 423}, {3757, 3758, 424}, {3760, 3760, 425}, {3762, 3763, 426}, {3773, 3773, 427}, {3776, 3780, 428}, {3782, 3782, 429}, {3792, 3801, 430}, {3804, 3805, 431}, {3872, 3881, 432}, {3904, 3911, 433}, {3913, 3945, 434}, {4256, 4293, 435}, {4304, 4342, 436}, {4352, 4441, 437}, {4447, 4514, 438}, {4520, 4601, 439}, {7680, 7835, 440}, {7840, 7929, 441}, {7936, 7957, 442}, {7960, 7965, 443}, {7968, 8005, 444}, {8008, 8013, 445}, {8016, 8023, 446}, {8025, 8025, 447}, {8027, 8027, 448}, {8029, 8029, 449}, {8031, 8061, 450}, {8064, 8116, 451}, {8118, 8124, 452}, {8126, 8126, 453}, {8130, 8132, 454}, {8134, 8140, 455}, {8144, 8147, 456}, {8150, 8155, 457}, {8160, 8172, 458}, {8178, 8180, 459}, {8182, 8188, 460}, {8319, 8319, 461}, {8450, 8450, 462}, {8455, 8455, 463}, {8458, 8467, 464}, {8469, 8469, 465}, {8472, 8477, 466}, {8484, 8484, 467}, {8486, 8486, 468}, {8488, 8488, 469}, {8490, 8497, 470}, {8499, 8504, 471}, {12293, 12293, 472}, {12337, 12341, 473}, {12353, 12436, 474}, {12443, 12446, 475}, {12449, 12538, 476}, {12540, 12542, 477}, {12549, 12588, 478}, {12593, 12686, 479}, {19968, 40869, 480}, {44032, 55203, 481}, {63744, 64045, 482}, {64256, 64262, 483}, {64275, 64279, 484}, {64287, 64296, 485}, {64298, 64310, 486}, {64312, 64316, 487}, {64318, 64318, 488}, {64320, 64321, 489}, {64323, 64324, 490}, {64326, 64433, 491}, {64467, 64829, 492}, {64848, 64911, 493}, {64914, 64967, 494}, {65008, 65019, 495}, {65136, 65138, 496}, {65140, 65140, 497}, {65142, 65276, 498}, {65296, 65305, 499}, {65313, 65338, 500}, {65345, 65370, 501}, {65382, 65470, 502}, {65474, 65479, 503}, {65482, 65487, 504}, {65490, 65495, 505}, {65498, 65500, 506}, },
            {{61, 61, 507}, },
            {{38, 38, 508}, {61, 61, 509}, },
            {{0, 9, 510}, {11, 12, 510}, {14, 38, 510}, {40, 91, 510}, {92, 92, 511}, {93, 65535, 510}, },
            {},
            {},
            {{61, 61, 512}, },
            {{43, 43, 513}, {61, 61, 514}, },
            {},
            {{45, 45, 515}, {61, 61, 516}, },
            {{46, 46, 517}, {48, 57, 518}, },
            {{42, 42, 519}, {47, 47, 520}, {61, 61, 521}, },
            {{46, 46, 522}, {48, 55, 523}, {56, 57, 524}, {68, 68, 525}, {69, 69, 526}, {70, 70, 527}, {76, 76, 528}, {88, 88, 529}, {100, 100, 530}, {101, 101, 531}, {102, 102, 532}, {108, 108, 533}, {120, 120, 534}, },
            {{46, 46, 522}, {48, 57, 535}, {68, 76, -22}, {100, 108, -22}, },
            {{58, 58, 536}, },
            {},
            {{60, 60, 537}, {61, 61, 538}, },
            {{61, 61, 539}, },
            {{61, 61, 540}, {62, 62, 541}, },
            {},
            {},
            {{36, 65500, -10}, },
            {{36, 95, -10}, {97, 107, 281}, {108, 108, 542}, {109, 122, 281}, {170, 65500, -10}, },
            {{36, 95, -10}, {97, 110, 281}, {111, 111, 543}, {112, 122, 281}, {170, 65500, -10}, },
            {{36, 110, -33}, {111, 111, 544}, {112, 65500, -33}, },
            {{36, 95, -10}, {97, 104, 281}, {105, 105, 545}, {106, 122, 281}, {170, 65500, -10}, },
            {},
            {},
            {{61, 61, 546}, },
            {{36, 65500, -10}, },
            {{36, 95, -10}, {97, 97, 281}, {98, 98, 547}, {99, 114, 281}, {115, 115, 548}, {116, 122, 281}, {170, 65500, -10}, },
            {{36, 110, -33}, {111, 111, 549}, {112, 113, 281}, {114, 114, 550}, {115, 120, 281}, {121, 121, 551}, {122, 122, 281}, {170, 65500, -10}, },
            {{36, 95, -10}, {97, 97, 552}, {98, 103, 281}, {104, 104, 553}, {105, 107, 281}, {108, 108, 554}, {109, 110, 281}, {111, 111, 555}, {112, 65500, -33}, },
            {{36, 95, -10}, {97, 100, 281}, {101, 101, 556}, {102, 110, 281}, {111, 111, 557}, {112, 65500, -33}, },
            {{36, 107, -32}, {108, 108, 558}, {109, 109, 281}, {110, 110, 559}, {111, 119, 281}, {120, 120, 560}, {121, 122, 281}, {170, 65500, -10}, },
            {{36, 95, -10}, {97, 97, 561}, {98, 104, 281}, {105, 105, 562}, {106, 107, 281}, {108, 108, 563}, {109, 110, 281}, {111, 111, 564}, {112, 65500, -33}, },
            {{36, 110, -33}, {111, 111, 565}, {112, 65500, -33}, },
            {{36, 95, -10}, {97, 115, 281}, {116, 116, 566}, {117, 122, 281}, {170, 65500, -10}, },
            {{36, 95, -10}, {97, 101, 281}, {102, 102, 567}, {103, 108, 281}, {109, 109, 568}, {110, 110, 569}, {111, 122, 281}, {170, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 110, -33}, {111, 111, 570}, {112, 65500, -33}, },
            {{36, 95, -10}, {97, 97, 571}, {98, 100, 281}, {101, 101, 572}, {102, 116, 281}, {117, 117, 573}, {118, 122, 281}, {170, 65500, -10}, },
            {{36, 95, -10}, {97, 97, 574}, {98, 113, 281}, {114, 114, 575}, {115, 116, 281}, {117, 117, 576}, {118, 65500, -51}, },
            {{36, 100, -43}, {101, 101, 577}, {102, 122, 281}, {170, 65500, -10}, },
            {{36, 95, -10}, {97, 103, 281}, {104, 104, 578}, {105, 115, 281}, {116, 116, 579}, {117, 117, 580}, {118, 118, 281}, {119, 119, 581}, {120, 120, 281}, {121, 121, 582}, {122, 65500, -41}, },
            {{36, 103, -54}, {104, 104, 583}, {105, 113, 281}, {114, 114, 584}, {115, 122, 281}, {170, 65500, -10}, },
            {{36, 95, -10}, {97, 114, 281}, {115, 115, 585}, {116, 65500, -40}, },
            {{36, 110, -33}, {111, 111, 586}, {112, 65500, -33}, },
            {{36, 103, -54}, {104, 104, 587}, {105, 122, 281}, {170, 65500, -10}, },
            {},
            {{61, 61, 588}, {124, 124, 589}, },
            {},
            {},
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{9, 32, -2}, },
            {},
            {{0, 65535, -9}, },
            {},
            {{34, 34, 590}, {39, 39, 591}, {48, 51, 592}, {52, 55, 593}, {92, 92, 594}, {98, 98, 595}, {102, 102, 596}, {110, 110, 597}, {114, 114, 598}, {116, 116, 599}, },
            {{36, 65500, -10}, },
            {{36, 36, 600}, {48, 57, 277}, {65, 90, 601}, {95, 95, 602}, {97, 122, 603}, {170, 170, 604}, {181, 181, 605}, {186, 186, 606}, {192, 214, 607}, {216, 246, 608}, {248, 501, 609}, {506, 535, 610}, {592, 680, 611}, {688, 696, 612}, {699, 705, 613}, {720, 721, 614}, {736, 740, 615}, {890, 890, 616}, {902, 902, 617}, {904, 906, 618}, {908, 908, 619}, {910, 929, 620}, {931, 974, 621}, {976, 982, 622}, {986, 986, 623}, {988, 988, 624}, {990, 990, 625}, {992, 992, 626}, {994, 1011, 627}, {1025, 1036, 628}, {1038, 1103, 629}, {1105, 1116, 630}, {1118, 1153, 631}, {1168, 1220, 632}, {1223, 1224, 633}, {1227, 1228, 634}, {1232, 1259, 635}, {1262, 1269, 636}, {1272, 1273, 637}, {1329, 1366, 638}, {1369, 1369, 639}, {1377, 1415, 640}, {1488, 1514, 641}, {1520, 1522, 642}, {1569, 1594, 643}, {1600, 1610, 644}, {1632, 1641, 323}, {1649, 1719, 645}, {1722, 1726, 646}, {1728, 1742, 647}, {1744, 1747, 648}, {1749, 1749, 649}, {1765, 1766, 650}, {1776, 1785, 330}, {2309, 2361, 651}, {2365, 2365, 652}, {2392, 2401, 653}, {2406, 2415, 334}, {2437, 2444, 654}, {2447, 2448, 655}, {2451, 2472, 656}, {2474, 2480, 657}, {2482, 2482, 658}, {2486, 2489, 659}, {2524, 2525, 660}, {2527, 2529, 661}, {2534, 2543, 343}, {2544, 2545, 662}, {2565, 2570, 663}, {2575, 2576, 664}, {2579, 2600, 665}, {2602, 2608, 666}, {2610, 2611, 667}, {2613, 2614, 668}, {2616, 2617, 669}, {2649, 2652, 670}, {2654, 2654, 671}, {2662, 2671, 354}, {2674, 2676, 672}, {2693, 2699, 673}, {2701, 2701, 674}, {2703, 2705, 675}, {2707, 2728, 676}, {2730, 2736, 677}, {2738, 2739, 678}, {2741, 2745, 679}, {2749, 2749, 680}, {2784, 2784, 681}, {2790, 2799, 365}, {2821, 2828, 682}, {2831, 2832, 683}, {2835, 2856, 684}, {2858, 2864, 685}, {2866, 2867, 686}, {2870, 2873, 687}, {2877, 2877, 688}, {2908, 2909, 689}, {2911, 2913, 690}, {2918, 2927, 375}, {2949, 2954, 691}, {2958, 2960, 692}, {2962, 2965, 693}, {2969, 2970, 694}, {2972, 2972, 695}, {2974, 2975, 696}, {2979, 2980, 697}, {2984, 2986, 698}, {2990, 2997, 699}, {2999, 3001, 700}, {3047, 3055, 386}, {3077, 3084, 701}, {3086, 3088, 702}, {3090, 3112, 703}, {3114, 3123, 704}, {3125, 3129, 705}, {3168, 3169, 706}, {3174, 3183, 393}, {3205, 3212, 707}, {3214, 3216, 708}, {3218, 3240, 709}, {3242, 3251, 710}, {3253, 3257, 711}, {3294, 3294, 712}, {3296, 3297, 713}, {3302, 3311, 401}, {3333, 3340, 714}, {3342, 3344, 715}, {3346, 3368, 716}, {3370, 3385, 717}, {3424, 3425, 718}, {3430, 3439, 407}, {3585, 3630, 719}, {3632, 3632, 720}, {3634, 3635, 721}, {3648, 3654, 722}, {3664, 3673, 412}, {3713, 3714, 723}, {3716, 3716, 724}, {3719, 3720, 725}, {3722, 3722, 726}, {3725, 3725, 727}, {3732, 3735, 728}, {3737, 3743, 729}, {3745, 3747, 730}, {3749, 3749, 731}, {3751, 3751, 732}, {3754, 3755, 733}, {3757, 3758, 734}, {3760, 3760, 735}, {3762, 3763, 736}, {3773, 3773, 737}, {3776, 3780, 738}, {3782, 3782, 739}, {3792, 3801, 430}, {3804, 3805, 740}, {3872, 3881, 432}, {3904, 3911, 741}, {3913, 3945, 742}, {4256, 4293, 743}, {4304, 4342, 744}, {4352, 4441, 745}, {4447, 4514, 746}, {4520, 4601, 747}, {7680, 7835, 748}, {7840, 7929, 749}, {7936, 7957, 750}, {7960, 7965, 751}, {7968, 8005, 752}, {8008, 8013, 753}, {8016, 8023, 754}, {8025, 8025, 755}, {8027, 8027, 756}, {8029, 8029, 757}, {8031, 8061, 758}, {8064, 8116, 759}, {8118, 8124, 760}, {8126, 8126, 761}, {8130, 8132, 762}, {8134, 8140, 763}, {8144, 8147, 764}, {8150, 8155, 765}, {8160, 8172, 766}, {8178, 8180, 767}, {8182, 8188, 768}, {8319, 8319, 769}, {8450, 8450, 770}, {8455, 8455, 771}, {8458, 8467, 772}, {8469, 8469, 773}, {8472, 8477, 774}, {8484, 8484, 775}, {8486, 8486, 776}, {8488, 8488, 777}, {8490, 8497, 778}, {8499, 8504, 779}, {12293, 12293, 780}, {12337, 12341, 781}, {12353, 12436, 782}, {12443, 12446, 783}, {12449, 12538, 784}, {12540, 12542, 785}, {12549, 12588, 786}, {12593, 12686, 787}, {19968, 40869, 788}, {44032, 55203, 789}, {63744, 64045, 790}, {64256, 64262, 791}, {64275, 64279, 792}, {64287, 64296, 793}, {64298, 64310, 794}, {64312, 64316, 795}, {64318, 64318, 796}, {64320, 64321, 797}, {64323, 64324, 798}, {64326, 64433, 799}, {64467, 64829, 800}, {64848, 64911, 801}, {64914, 64967, 802}, {65008, 65019, 803}, {65136, 65138, 804}, {65140, 65140, 805}, {65142, 65276, 806}, {65296, 65305, 499}, {65313, 65338, 807}, {65345, 65370, 808}, {65382, 65470, 809}, {65474, 65479, 810}, {65482, 65487, 811}, {65490, 65495, 812}, {65498, 65500, 813}, },
            {{58, 58, 536}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -279}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -279}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -279}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -279}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -279}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -279}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -279}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -279}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -279}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -279}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -279}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -279}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -279}, },
            {{36, 65500, -10}, },
            {{36, 65500, -279}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -279}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {},
            {},
            {},
            {{39, 39, 814}, },
            {{34, 34, 815}, {39, 39, 816}, {48, 51, 817}, {52, 55, 818}, {92, 92, 819}, {98, 98, 820}, {102, 102, 821}, {110, 110, 822}, {114, 114, 823}, {116, 116, 824}, },
            {},
            {},
            {},
            {},
            {},
            {{46, 46, 825}, },
            {{48, 57, 518}, {68, 68, 826}, {69, 69, 827}, {70, 70, 828}, {100, 100, 829}, {101, 101, 830}, {102, 102, 831}, },
            {{0, 9, 832}, {10, 10, 833}, {11, 12, 832}, {13, 13, 834}, {14, 41, 832}, {42, 42, 835}, {43, 65535, 832}, },
            {{0, 9, 836}, {10, 10, 837}, {11, 12, 836}, {13, 13, 838}, {14, 65535, 836}, },
            {},
            {{48, 57, 839}, {68, 68, 840}, {69, 69, 841}, {70, 70, 842}, {100, 100, 843}, {101, 101, 844}, {102, 102, 845}, },
            {{46, 70, -22}, {76, 76, 846}, {100, 102, -22}, {108, 108, 847}, },
            {{46, 46, 522}, {48, 57, 524}, {68, 70, -22}, {100, 102, -22}, },
            {},
            {{43, 43, 848}, {45, 45, 849}, {48, 57, 850}, },
            {},
            {},
            {{48, 57, 851}, {65, 70, 852}, {97, 102, 853}, },
            {},
            {{43, 57, -528}, },
            {},
            {},
            {{48, 102, -531}, },
            {{46, 108, -23}, },
            {{36, 36, 854}, {65, 90, 855}, {95, 95, 856}, {97, 122, 857}, {170, 170, 858}, {181, 181, 859}, {186, 186, 860}, {192, 214, 861}, {216, 246, 862}, {248, 501, 863}, {506, 535, 864}, {592, 680, 865}, {688, 696, 866}, {699, 705, 867}, {720, 721, 868}, {736, 740, 869}, {890, 890, 870}, {902, 902, 871}, {904, 906, 872}, {908, 908, 873}, {910, 929, 874}, {931, 974, 875}, {976, 982, 876}, {986, 986, 877}, {988, 988, 878}, {990, 990, 879}, {992, 992, 880}, {994, 1011, 881}, {1025, 1036, 882}, {1038, 1103, 883}, {1105, 1116, 884}, {1118, 1153, 885}, {1168, 1220, 886}, {1223, 1224, 887}, {1227, 1228, 888}, {1232, 1259, 889}, {1262, 1269, 890}, {1272, 1273, 891}, {1329, 1366, 892}, {1369, 1369, 893}, {1377, 1415, 894}, {1488, 1514, 895}, {1520, 1522, 896}, {1569, 1594, 897}, {1600, 1610, 898}, {1649, 1719, 899}, {1722, 1726, 900}, {1728, 1742, 901}, {1744, 1747, 902}, {1749, 1749, 903}, {1765, 1766, 904}, {2309, 2361, 905}, {2365, 2365, 906}, {2392, 2401, 907}, {2437, 2444, 908}, {2447, 2448, 909}, {2451, 2472, 910}, {2474, 2480, 911}, {2482, 2482, 912}, {2486, 2489, 913}, {2524, 2525, 914}, {2527, 2529, 915}, {2544, 2545, 916}, {2565, 2570, 917}, {2575, 2576, 918}, {2579, 2600, 919}, {2602, 2608, 920}, {2610, 2611, 921}, {2613, 2614, 922}, {2616, 2617, 923}, {2649, 2652, 924}, {2654, 2654, 925}, {2674, 2676, 926}, {2693, 2699, 927}, {2701, 2701, 928}, {2703, 2705, 929}, {2707, 2728, 930}, {2730, 2736, 931}, {2738, 2739, 932}, {2741, 2745, 933}, {2749, 2749, 934}, {2784, 2784, 935}, {2821, 2828, 936}, {2831, 2832, 937}, {2835, 2856, 938}, {2858, 2864, 939}, {2866, 2867, 940}, {2870, 2873, 941}, {2877, 2877, 942}, {2908, 2909, 943}, {2911, 2913, 944}, {2949, 2954, 945}, {2958, 2960, 946}, {2962, 2965, 947}, {2969, 2970, 948}, {2972, 2972, 949}, {2974, 2975, 950}, {2979, 2980, 951}, {2984, 2986, 952}, {2990, 2997, 953}, {2999, 3001, 954}, {3077, 3084, 955}, {3086, 3088, 956}, {3090, 3112, 957}, {3114, 3123, 958}, {3125, 3129, 959}, {3168, 3169, 960}, {3205, 3212, 961}, {3214, 3216, 962}, {3218, 3240, 963}, {3242, 3251, 964}, {3253, 3257, 965}, {3294, 3294, 966}, {3296, 3297, 967}, {3333, 3340, 968}, {3342, 3344, 969}, {3346, 3368, 970}, {3370, 3385, 971}, {3424, 3425, 972}, {3585, 3630, 973}, {3632, 3632, 974}, {3634, 3635, 975}, {3648, 3654, 976}, {3713, 3714, 977}, {3716, 3716, 978}, {3719, 3720, 979}, {3722, 3722, 980}, {3725, 3725, 981}, {3732, 3735, 982}, {3737, 3743, 983}, {3745, 3747, 984}, {3749, 3749, 985}, {3751, 3751, 986}, {3754, 3755, 987}, {3757, 3758, 988}, {3760, 3760, 989}, {3762, 3763, 990}, {3773, 3773, 991}, {3776, 3780, 992}, {3782, 3782, 993}, {3804, 3805, 994}, {3904, 3911, 995}, {3913, 3945, 996}, {4256, 4293, 997}, {4304, 4342, 998}, {4352, 4441, 999}, {4447, 4514, 1000}, {4520, 4601, 1001}, {7680, 7835, 1002}, {7840, 7929, 1003}, {7936, 7957, 1004}, {7960, 7965, 1005}, {7968, 8005, 1006}, {8008, 8013, 1007}, {8016, 8023, 1008}, {8025, 8025, 1009}, {8027, 8027, 1010}, {8029, 8029, 1011}, {8031, 8061, 1012}, {8064, 8116, 1013}, {8118, 8124, 1014}, {8126, 8126, 1015}, {8130, 8132, 1016}, {8134, 8140, 1017}, {8144, 8147, 1018}, {8150, 8155, 1019}, {8160, 8172, 1020}, {8178, 8180, 1021}, {8182, 8188, 1022}, {8319, 8319, 1023}, {8450, 8450, 1024}, {8455, 8455, 1025}, {8458, 8467, 1026}, {8469, 8469, 1027}, {8472, 8477, 1028}, {8484, 8484, 1029}, {8486, 8486, 1030}, {8488, 8488, 1031}, {8490, 8497, 1032}, {8499, 8504, 1033}, {12293, 12293, 1034}, {12337, 12341, 1035}, {12353, 12436, 1036}, {12443, 12446, 1037}, {12449, 12538, 1038}, {12540, 12542, 1039}, {12549, 12588, 1040}, {12593, 12686, 1041}, {19968, 40869, 1042}, {44032, 55203, 1043}, {63744, 64045, 1044}, {64256, 64262, 1045}, {64275, 64279, 1046}, {64287, 64296, 1047}, {64298, 64310, 1048}, {64312, 64316, 1049}, {64318, 64318, 1050}, {64320, 64321, 1051}, {64323, 64324, 1052}, {64326, 64433, 1053}, {64467, 64829, 1054}, {64848, 64911, 1055}, {64914, 64967, 1056}, {65008, 65019, 1057}, {65136, 65138, 1058}, {65140, 65140, 1059}, {65142, 65276, 1060}, {65313, 65338, 1061}, {65345, 65370, 1062}, {65382, 65470, 1063}, {65474, 65479, 1064}, {65482, 65487, 1065}, {65490, 65495, 1066}, {65498, 65500, 1067}, },
            {{61, 61, 1068}, },
            {},
            {},
            {},
            {{61, 61, 1069}, {62, 62, 1070}, },
            {{36, 100, -43}, {101, 101, 1071}, {102, 65500, -53}, },
            {{36, 95, -10}, {97, 99, 281}, {100, 100, 1072}, {101, 122, 281}, {170, 65500, -10}, },
            {{36, 107, -32}, {108, 108, 1073}, {109, 65500, -32}, },
            {{36, 100, -43}, {101, 101, 1074}, {102, 113, 281}, {114, 114, 1075}, {115, 65500, -55}, },
            {},
            {{36, 114, -56}, {115, 115, 1076}, {116, 65500, -40}, },
            {{36, 114, -56}, {115, 115, 1077}, {116, 65500, -40}, },
            {{36, 110, -33}, {111, 111, 1078}, {112, 65500, -33}, },
            {{36, 100, -43}, {101, 101, 1079}, {102, 65500, -53}, },
            {{36, 115, -47}, {116, 116, 1080}, {117, 65500, -47}, },
            {{36, 114, -56}, {115, 115, 1081}, {116, 116, 1082}, {117, 65500, -47}, },
            {{36, 95, -10}, {97, 97, 1083}, {98, 122, 281}, {170, 65500, -10}, },
            {{36, 95, -10}, {97, 97, 1084}, {98, 65500, -555}, },
            {{36, 95, -10}, {97, 109, 281}, {110, 110, 1085}, {111, 65500, -48}, },
            {{36, 101, -48}, {102, 102, 1086}, {103, 122, 281}, {170, 65500, -10}, },
            {{36, 95, -10}, {97, 116, 281}, {117, 117, 1087}, {118, 65500, -51}, },
            {{36, 114, -56}, {115, 115, 1088}, {116, 65500, -40}, },
            {{36, 116, -559}, {117, 117, 1089}, {118, 65500, -51}, },
            {{36, 115, -47}, {116, 116, 1090}, {117, 65500, -47}, },
            {{36, 107, -32}, {108, 108, 1091}, {109, 65500, -32}, },
            {{36, 109, -557}, {110, 110, 1092}, {111, 65500, -48}, },
            {{36, 110, -33}, {111, 111, 1093}, {112, 65500, -33}, },
            {{36, 95, -10}, {97, 113, 281}, {114, 114, 1094}, {115, 65500, -55}, },
            {{36, 115, -47}, {116, 116, 1095}, {117, 65500, -47}, },
            {{36, 115, -47}, {116, 116, 1096}, {117, 65500, -47}, },
            {{36, 65500, -10}, },
            {{36, 95, -10}, {97, 111, 281}, {112, 112, 1097}, {113, 122, 281}, {170, 65500, -10}, },
            {{36, 114, -56}, {115, 115, 1098}, {116, 116, 1099}, {117, 65500, -47}, },
            {{36, 109, -557}, {110, 110, 1100}, {111, 65500, -48}, },
            {{36, 95, -10}, {97, 108, 281}, {109, 109, 1101}, {110, 115, 281}, {116, 116, 1102}, {117, 65500, -47}, },
            {{36, 95, -10}, {97, 118, 281}, {119, 119, 1103}, {120, 122, 281}, {170, 65500, -10}, },
            {{36, 107, -32}, {108, 108, 1104}, {109, 65500, -32}, },
            {{36, 95, -10}, {97, 98, 281}, {99, 99, 1105}, {100, 122, 281}, {170, 65500, -10}, },
            {{36, 104, -35}, {105, 105, 1106}, {106, 110, 281}, {111, 111, 1107}, {112, 65500, -33}, },
            {{36, 97, -40}, {98, 98, 1108}, {99, 122, 281}, {170, 65500, -10}, },
            {{36, 115, -47}, {116, 116, 1109}, {117, 65500, -47}, },
            {{36, 110, -33}, {111, 111, 1110}, {112, 65500, -33}, },
            {{36, 95, -10}, {97, 97, 1111}, {98, 113, 281}, {114, 114, 1112}, {115, 65500, -55}, },
            {{36, 111, -570}, {112, 112, 1113}, {113, 65500, -570}, },
            {{36, 104, -35}, {105, 105, 1114}, {106, 65500, -35}, },
            {{36, 109, -557}, {110, 110, 1115}, {111, 65500, -48}, },
            {{36, 104, -35}, {105, 105, 1116}, {106, 113, 281}, {114, 114, 1117}, {115, 65500, -55}, },
            {{36, 95, -10}, {97, 97, 1118}, {98, 116, 281}, {117, 117, 1119}, {118, 120, 281}, {121, 121, 1120}, {122, 65500, -41}, },
            {{36, 100, -43}, {101, 101, 1121}, {102, 65500, -53}, },
            {{36, 104, -35}, {105, 105, 1122}, {106, 107, 281}, {108, 108, 1123}, {109, 65500, -32}, },
            {{36, 104, -35}, {105, 105, 1124}, {106, 65500, -35}, },
            {},
            {},
            {{0, 65535, -9}, },
            {{0, 65535, -9}, },
            {{0, 34, -9}, {35, 47, 273}, {48, 55, 1125}, {56, 91, 273}, {92, 65535, -9}, },
            {{0, 47, -594}, {48, 55, 1126}, {56, 65535, -594}, },
            {{0, 65535, -9}, },
            {{0, 65535, -9}, },
            {{0, 65535, -9}, },
            {{0, 65535, -9}, },
            {{0, 65535, -9}, },
            {{0, 65535, -9}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {},
            {{39, 39, 814}, },
            {{39, 39, 814}, },
            {{39, 39, 814}, {48, 55, 1127}, },
            {{39, 39, 814}, {48, 55, 1128}, },
            {{39, 39, 814}, },
            {{39, 39, 814}, },
            {{39, 39, 814}, },
            {{39, 39, 814}, },
            {{39, 39, 814}, },
            {{39, 39, 814}, },
            {},
            {},
            {{43, 43, 1129}, {45, 45, 1130}, {48, 57, 1131}, },
            {},
            {},
            {{43, 57, -829}, },
            {},
            {{0, 41, -521}, {42, 42, 1132}, {43, 65535, 832}, },
            {{0, 65535, -834}, },
            {{0, 9, 832}, {10, 10, 1133}, {11, 65535, -834}, },
            {{0, 9, 1134}, {10, 10, 1135}, {11, 12, 1134}, {13, 13, 1136}, {14, 41, 1134}, {42, 42, 1137}, {43, 46, 1134}, {47, 47, 1138}, {48, 65535, 1134}, },
            {{0, 65535, -522}, },
            {},
            {{10, 10, 1139}, },
            {{48, 102, -524}, },
            {},
            {{43, 43, 1140}, {45, 45, 1141}, {48, 57, 1142}, },
            {},
            {},
            {{43, 57, -843}, },
            {},
            {},
            {},
            {{48, 57, 850}, },
            {{48, 57, 850}, },
            {{48, 57, 850}, {68, 68, 1143}, {70, 70, 1144}, {100, 100, 1145}, {102, 102, 1146}, },
            {{48, 70, -531}, {76, 76, 1147}, {97, 102, 853}, {108, 108, 1148}, },
            {{48, 108, -853}, },
            {{48, 108, -853}, },
            {{36, 65500, -538}, },
            {{36, 65500, -538}, },
            {{36, 65500, -538}, },
            {{36, 65500, -538}, },
            {{36, 65500, -538}, },
            {{36, 65500, -538}, },
            {{36, 65500, -538}, },
            {{36, 65500, -538}, },
            {{36, 65500, -538}, },
            {{36, 65500, -538}, },
            {{36, 65500, -538}, },
            {{36, 65500, -538}, },
            {{36, 65500, -538}, },
            {{36, 65500, -538}, },
            {{36, 65500, -538}, },
            {{36, 65500, -538}, },
            {{36, 65500, -538}, },
            {{36, 65500, -538}, },
            {{36, 65500, -538}, },
            {{36, 65500, -538}, },
            {{36, 65500, -538}, },
            {{36, 65500, -538}, },
            {{36, 65500, -538}, },
            {{36, 65500, -538}, },
            {{36, 65500, -538}, },
            {{36, 65500, -538}, },
            {{36, 65500, -538}, },
            {{36, 65500, -538}, },
            {{36, 65500, -538}, },
            {{36, 65500, -538}, },
            {{36, 65500, -538}, },
            {{36, 65500, -538}, },
            {{36, 65500, -538}, },
            {{36, 65500, -538}, },
            {{36, 65500, -538}, },
            {{36, 65500, -538}, },
            {{36, 65500, -538}, },
            {{36, 65500, -538}, },
            {{36, 65500, -538}, },
            {{36, 65500, -538}, },
            {{36, 65500, -538}, },
            {{36, 65500, -538}, },
            {{36, 65500, -538}, },
            {{36, 65500, -538}, },
            {{36, 65500, -538}, },
            {{36, 65500, -538}, },
            {{36, 65500, -538}, },
            {{36, 65500, -538}, },
            {{36, 65500, -538}, },
            {{36, 65500, -538}, },
            {{36, 65500, -538}, },
            {{36, 65500, -538}, },
            {{36, 65500, -538}, },
            {{36, 65500, -538}, },
            {{36, 65500, -538}, },
            {{36, 65500, -538}, },
            {{36, 65500, -538}, },
            {{36, 65500, -538}, },
            {{36, 65500, -538}, },
            {{36, 65500, -538}, },
            {{36, 65500, -538}, },
            {{36, 65500, -538}, },
            {{36, 65500, -538}, },
            {{36, 65500, -538}, },
            {{36, 65500, -538}, },
            {{36, 65500, -538}, },
            {{36, 65500, -538}, },
            {{36, 65500, -538}, },
            {{36, 65500, -538}, },
            {{36, 65500, -538}, },
            {{36, 65500, -538}, },
            {{36, 65500, -538}, },
            {{36, 65500, -538}, },
            {{36, 65500, -538}, },
            {{36, 65500, -538}, },
            {{36, 65500, -538}, },
            {{36, 65500, -538}, },
            {{36, 65500, -538}, },
            {{36, 65500, -538}, },
            {{36, 65500, -538}, },
            {{36, 65500, -538}, },
            {{36, 65500, -538}, },
            {{36, 65500, -538}, },
            {{36, 65500, -538}, },
            {{36, 65500, -538}, },
            {{36, 65500, -538}, },
            {{36, 65500, -538}, },
            {{36, 65500, -538}, },
            {{36, 65500, -538}, },
            {{36, 65500, -538}, },
            {{36, 65500, -538}, },
            {{36, 65500, -538}, },
            {{36, 65500, -538}, },
            {{36, 65500, -538}, },
            {{36, 65500, -538}, },
            {{36, 65500, -538}, },
            {{36, 65500, -538}, },
            {{36, 65500, -538}, },
            {{36, 65500, -538}, },
            {{36, 65500, -538}, },
            {{36, 65500, -538}, },
            {{36, 65500, -538}, },
            {{36, 65500, -538}, },
            {{36, 65500, -538}, },
            {{36, 65500, -538}, },
            {{36, 65500, -538}, },
            {{36, 65500, -538}, },
            {{36, 65500, -538}, },
            {{36, 65500, -538}, },
            {{36, 65500, -538}, },
            {{36, 65500, -538}, },
            {{36, 65500, -538}, },
            {{36, 65500, -538}, },
            {{36, 65500, -538}, },
            {{36, 65500, -538}, },
            {{36, 65500, -538}, },
            {{36, 65500, -538}, },
            {{36, 65500, -538}, },
            {{36, 65500, -538}, },
            {{36, 65500, -538}, },
            {{36, 65500, -538}, },
            {{36, 65500, -538}, },
            {{36, 65500, -538}, },
            {{36, 65500, -538}, },
            {{36, 65500, -538}, },
            {{36, 65500, -538}, },
            {{36, 65500, -538}, },
            {{36, 65500, -538}, },
            {{36, 65500, -538}, },
            {{36, 65500, -538}, },
            {{36, 65500, -538}, },
            {{36, 65500, -538}, },
            {{36, 65500, -538}, },
            {{36, 65500, -538}, },
            {{36, 65500, -538}, },
            {{36, 65500, -538}, },
            {{36, 65500, -538}, },
            {{36, 65500, -538}, },
            {{36, 65500, -538}, },
            {{36, 65500, -538}, },
            {{36, 65500, -538}, },
            {{36, 65500, -538}, },
            {{36, 65500, -538}, },
            {{36, 65500, -538}, },
            {{36, 65500, -538}, },
            {{36, 65500, -538}, },
            {{36, 65500, -538}, },
            {{36, 65500, -538}, },
            {{36, 65500, -538}, },
            {{36, 65500, -538}, },
            {{36, 65500, -538}, },
            {{36, 65500, -538}, },
            {{36, 65500, -538}, },
            {{36, 65500, -538}, },
            {{36, 65500, -538}, },
            {{36, 65500, -538}, },
            {{36, 65500, -538}, },
            {{36, 65500, -538}, },
            {{36, 65500, -538}, },
            {{36, 65500, -538}, },
            {{36, 65500, -538}, },
            {{36, 65500, -538}, },
            {{36, 65500, -538}, },
            {{36, 65500, -538}, },
            {{36, 65500, -538}, },
            {{36, 65500, -538}, },
            {{36, 65500, -538}, },
            {{36, 65500, -538}, },
            {{36, 65500, -538}, },
            {{36, 65500, -538}, },
            {{36, 65500, -538}, },
            {{36, 65500, -538}, },
            {{36, 65500, -538}, },
            {{36, 65500, -538}, },
            {{36, 65500, -538}, },
            {{36, 65500, -538}, },
            {{36, 65500, -538}, },
            {{36, 65500, -538}, },
            {{36, 65500, -538}, },
            {{36, 65500, -538}, },
            {{36, 65500, -538}, },
            {{36, 65500, -538}, },
            {{36, 65500, -538}, },
            {{36, 65500, -538}, },
            {{36, 65500, -538}, },
            {{36, 65500, -538}, },
            {{36, 65500, -538}, },
            {{36, 65500, -538}, },
            {{36, 65500, -538}, },
            {{36, 65500, -538}, },
            {{36, 65500, -538}, },
            {{36, 65500, -538}, },
            {{36, 65500, -538}, },
            {{36, 65500, -538}, },
            {{36, 65500, -538}, },
            {{36, 65500, -538}, },
            {{36, 65500, -538}, },
            {{36, 65500, -538}, },
            {{36, 65500, -538}, },
            {{36, 65500, -538}, },
            {{36, 65500, -538}, },
            {{36, 65500, -538}, },
            {{36, 65500, -538}, },
            {{36, 65500, -538}, },
            {{36, 65500, -538}, },
            {{36, 65500, -538}, },
            {{36, 65500, -538}, },
            {{36, 65500, -538}, },
            {{36, 65500, -538}, },
            {{36, 65500, -538}, },
            {{36, 65500, -538}, },
            {{36, 65500, -538}, },
            {{36, 65500, -538}, },
            {{36, 65500, -538}, },
            {},
            {},
            {{61, 61, 1149}, },
            {{36, 95, -10}, {97, 119, 281}, {120, 120, 1150}, {121, 65500, -44}, },
            {{36, 100, -43}, {101, 101, 1151}, {102, 65500, -53}, },
            {{36, 100, -43}, {101, 101, 1152}, {102, 65500, -53}, },
            {{36, 118, -574}, {119, 119, 1153}, {120, 65500, -574}, },
            {{36, 115, -47}, {116, 116, 1154}, {117, 65500, -47}, },
            {{36, 115, -47}, {116, 116, 1155}, {117, 65500, -47}, },
            {{36, 100, -43}, {101, 101, 1156}, {102, 65500, -53}, },
            {{36, 107, -32}, {108, 108, 1157}, {109, 65500, -32}, },
            {{36, 95, -10}, {97, 97, 1158}, {98, 65500, -555}, },
            {{36, 100, -43}, {101, 101, 1159}, {102, 65500, -53}, },
            {{36, 100, -43}, {101, 101, 1160}, {102, 65500, -53}, },
            {{36, 98, -576}, {99, 99, 1161}, {100, 65500, -576}, },
            {{36, 113, -566}, {114, 114, 1162}, {115, 65500, -55}, },
            {{36, 114, -56}, {115, 115, 1163}, {116, 65500, -40}, },
            {{36, 114, -56}, {115, 115, 1164}, {116, 116, 1165}, {117, 65500, -47}, },
            {{36, 95, -10}, {97, 97, 1166}, {98, 65500, -555}, },
            {{36, 97, -40}, {98, 98, 1167}, {99, 65500, -578}, },
            {{36, 100, -43}, {101, 101, 1168}, {102, 65500, -53}, },
            {{36, 108, -573}, {109, 109, 1169}, {110, 122, 281}, {170, 65500, -10}, },
            {{36, 100, -43}, {101, 101, 1170}, {102, 65500, -53}, },
            {{36, 114, -56}, {115, 115, 1171}, {116, 65500, -40}, },
            {{36, 95, -10}, {97, 97, 1172}, {98, 65500, -555}, },
            {{36, 95, -10}, {97, 97, 1173}, {98, 65500, -555}, },
            {{36, 65500, -10}, },
            {{36, 110, -33}, {111, 111, 1174}, {112, 65500, -33}, },
            {{36, 111, -570}, {112, 112, 1175}, {113, 65500, -570}, },
            {{36, 107, -32}, {108, 108, 1176}, {109, 110, 281}, {111, 111, 1177}, {112, 65500, -33}, },
            {{36, 115, -47}, {116, 116, 1178}, {117, 65500, -47}, },
            {{36, 100, -43}, {101, 101, 1179}, {102, 65500, -53}, },
            {{36, 95, -10}, {97, 102, 281}, {103, 103, 1180}, {104, 122, 281}, {170, 65500, -10}, },
            {{36, 100, -43}, {101, 101, 1181}, {102, 65500, -53}, },
            {{36, 104, -35}, {105, 105, 1182}, {106, 65500, -35}, },
            {{36, 65500, -10}, },
            {{36, 107, -32}, {108, 108, 1183}, {109, 65500, -32}, },
            {{36, 95, -10}, {97, 106, 281}, {107, 107, 1184}, {108, 122, 281}, {170, 65500, -10}, },
            {{36, 95, -10}, {97, 117, 281}, {118, 118, 1185}, {119, 122, 281}, {170, 65500, -10}, },
            {{36, 115, -47}, {116, 116, 1186}, {117, 65500, -47}, },
            {{36, 107, -32}, {108, 108, 1187}, {109, 65500, -32}, },
            {{36, 116, -559}, {117, 117, 1188}, {118, 65500, -51}, },
            {{36, 113, -566}, {114, 114, 1189}, {115, 65500, -55}, },
            {{36, 115, -47}, {116, 116, 1190}, {117, 65500, -47}, },
            {{36, 104, -35}, {105, 105, 1191}, {106, 65500, -35}, },
            {{36, 100, -43}, {101, 101, 1192}, {102, 65500, -53}, },
            {{36, 115, -47}, {116, 116, 1193}, {117, 65500, -47}, },
            {{36, 98, -576}, {99, 99, 1194}, {100, 65500, -576}, },
            {{36, 114, -56}, {115, 115, 1195}, {116, 65500, -40}, },
            {{36, 110, -33}, {111, 111, 1196}, {112, 65500, -33}, },
            {{36, 109, -557}, {110, 110, 1197}, {111, 65500, -48}, },
            {{36, 100, -43}, {101, 101, 1198}, {102, 65500, -53}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 99, -545}, {100, 100, 1199}, {101, 65500, -545}, },
            {{36, 95, -10}, {97, 97, 1200}, {98, 65500, -555}, },
            {{36, 107, -32}, {108, 108, 1201}, {109, 65500, -32}, },
            {{0, 47, -594}, {48, 55, 1202}, {56, 65535, -594}, },
            {{0, 65535, -9}, },
            {{39, 39, 814}, {48, 55, 1203}, },
            {{39, 39, 814}, },
            {{48, 57, 1131}, },
            {{48, 57, 1131}, },
            {{48, 57, 1131}, {68, 68, 826}, {70, 100, -520}, {102, 102, 831}, },
            {{0, 9, 1204}, {10, 10, 1205}, {11, 12, 1204}, {13, 13, 1206}, {14, 41, 1204}, {42, 42, 1132}, {43, 46, 1204}, {47, 47, 1207}, {48, 65535, 1204}, },
            {{0, 65535, -834}, },
            {{0, 9, 1208}, {10, 10, 1209}, {11, 12, 1208}, {13, 13, 1210}, {14, 41, 1208}, {42, 42, 1211}, {43, 65535, 1208}, },
            {{0, 65535, -1136}, },
            {{0, 9, 1208}, {10, 10, 1212}, {11, 65535, -1136}, },
            {{0, 65535, -837}, },
            {},
            {},
            {{48, 57, 1142}, },
            {{48, 57, 1142}, },
            {{48, 57, 1142}, {68, 68, 840}, {70, 100, -524}, {102, 102, 845}, },
            {},
            {},
            {},
            {},
            {},
            {},
            {},
            {{36, 110, -33}, {111, 111, 1213}, {112, 65500, -33}, },
            {{36, 107, -32}, {108, 108, 1214}, {109, 65500, -32}, },
            {{36, 65500, -10}, },
            {{36, 58, -10}, {65, 79, 279}, {80, 80, 1215}, {81, 90, 279}, {95, 65500, -10}, },
            {{36, 116, -559}, {117, 117, 1216}, {118, 65500, -51}, },
            {{36, 113, -566}, {114, 114, 1217}, {115, 65500, -55}, },
            {{36, 113, -566}, {114, 114, 1218}, {115, 65500, -55}, },
            {{36, 100, -43}, {101, 101, 1219}, {102, 65500, -53}, },
            {{36, 106, -1107}, {107, 107, 1220}, {108, 65500, -1107}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 103, -54}, {104, 104, 1221}, {105, 65500, -58}, },
            {{36, 65500, -10}, },
            {{36, 114, -56}, {115, 115, 1222}, {116, 65500, -40}, },
            {{36, 115, -47}, {116, 116, 1223}, {117, 65500, -47}, },
            {{36, 104, -35}, {105, 105, 1224}, {106, 65500, -35}, },
            {{36, 116, -559}, {117, 117, 1225}, {118, 65500, -51}, },
            {{36, 107, -32}, {108, 108, 1226}, {109, 65500, -32}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 109, -557}, {110, 110, 1227}, {111, 65500, -48}, },
            {{36, 100, -43}, {101, 101, 1228}, {102, 65500, -53}, },
            {{36, 107, -32}, {108, 108, 1229}, {109, 65500, -32}, },
            {{36, 115, -47}, {116, 116, 1230}, {117, 65500, -47}, },
            {{36, 65500, -10}, },
            {{36, 57, -10}, {58, 58, 1231}, {65, 65500, -10}, },
            {{36, 100, -43}, {101, 101, 1232}, {102, 65500, -53}, },
            {{36, 113, -566}, {114, 114, 1233}, {115, 65500, -55}, },
            {{36, 95, -10}, {97, 97, 1234}, {98, 65500, -555}, },
            {{36, 113, -566}, {114, 114, 1235}, {115, 65500, -55}, },
            {{36, 65500, -10}, },
            {{36, 114, -56}, {115, 115, 1236}, {116, 65500, -40}, },
            {{36, 117, -1108}, {118, 118, 1237}, {119, 65500, -1108}, },
            {{36, 65500, -10}, },
            {{36, 95, -10}, {97, 97, 1238}, {98, 65500, -555}, },
            {{36, 95, -10}, {97, 97, 1239}, {98, 65500, -555}, },
            {{36, 100, -43}, {101, 101, 1240}, {102, 65500, -53}, },
            {{36, 104, -35}, {105, 105, 1241}, {106, 65500, -35}, },
            {{36, 113, -566}, {114, 114, 1242}, {115, 65500, -55}, },
            {{36, 115, -47}, {116, 116, 1243}, {117, 65500, -47}, },
            {{36, 104, -35}, {105, 105, 1244}, {106, 65500, -35}, },
            {{36, 98, -576}, {99, 99, 1245}, {100, 65500, -576}, },
            {{36, 113, -566}, {114, 114, 1246}, {115, 65500, -55}, },
            {{36, 98, -576}, {99, 99, 1247}, {100, 65500, -576}, },
            {{36, 103, -54}, {104, 104, 1248}, {105, 65500, -58}, },
            {{36, 65500, -10}, },
            {{36, 118, -574}, {119, 119, 1249}, {120, 65500, -574}, },
            {{36, 114, -56}, {115, 115, 1250}, {116, 65500, -40}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 115, -47}, {116, 116, 1251}, {117, 65500, -47}, },
            {{36, 100, -43}, {101, 101, 1252}, {102, 65500, -53}, },
            {{0, 65535, -9}, },
            {{39, 39, 814}, },
            {{0, 9, 1253}, {10, 10, 1254}, {11, 12, 1253}, {13, 13, 1255}, {14, 41, 1253}, {42, 42, 1256}, {43, 65535, 1253}, },
            {{0, 65535, -1206}, },
            {{0, 9, 1253}, {10, 10, 1257}, {11, 65535, -1206}, },
            {},
            {{0, 65535, -1136}, },
            {{0, 65535, -1136}, },
            {{0, 9, 1208}, {10, 10, 1258}, {11, 65535, -1136}, },
            {{0, 41, -837}, {42, 42, 1211}, {43, 65535, -837}, },
            {{0, 65535, -1136}, },
            {{36, 58, -10}, {65, 66, 279}, {67, 67, 1259}, {68, 90, 279}, {95, 65500, -10}, },
            {{36, 58, -10}, {65, 82, 279}, {83, 83, 1260}, {84, 90, 279}, {95, 65500, -10}, },
            {{36, 110, -33}, {111, 111, 1261}, {112, 65500, -33}, },
            {{36, 95, -10}, {97, 97, 1262}, {98, 65500, -555}, },
            {{36, 95, -10}, {97, 97, 1263}, {98, 65500, -555}, },
            {{36, 115, -47}, {116, 116, 1264}, {117, 65500, -47}, },
            {{36, 95, -10}, {97, 97, 1265}, {98, 65500, -555}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 109, -557}, {110, 110, 1266}, {111, 65500, -48}, },
            {{36, 107, -32}, {108, 108, 1267}, {109, 65500, -32}, },
            {{36, 100, -43}, {101, 101, 1268}, {102, 65500, -53}, },
            {{36, 99, -545}, {100, 100, 1269}, {101, 65500, -545}, },
            {{36, 65500, -10}, },
            {{36, 107, -32}, {108, 108, 1270}, {109, 65500, -32}, },
            {{36, 65500, -10}, },
            {{47, 47, 1271}, {58, 58, 536}, },
            {{36, 108, -573}, {109, 109, 1272}, {110, 65500, -1091}, },
            {{36, 115, -47}, {116, 116, 1273}, {117, 65500, -47}, },
            {{36, 109, -557}, {110, 110, 1274}, {111, 65500, -48}, },
            {{36, 101, -48}, {102, 102, 1275}, {103, 65500, -558}, },
            {{36, 111, -570}, {112, 112, 1276}, {113, 65500, -570}, },
            {{36, 100, -43}, {101, 101, 1277}, {102, 65500, -53}, },
            {{36, 102, -1102}, {103, 103, 1278}, {104, 65500, -1102}, },
            {{36, 115, -47}, {116, 116, 1279}, {117, 65500, -47}, },
            {{36, 98, -576}, {99, 99, 1280}, {100, 65500, -576}, },
            {{36, 98, -576}, {99, 99, 1281}, {100, 65500, -576}, },
            {{36, 109, -557}, {110, 110, 1282}, {111, 65500, -48}, },
            {{36, 65500, -10}, },
            {{36, 98, -576}, {99, 99, 1283}, {100, 65500, -576}, },
            {{36, 115, -47}, {116, 116, 1284}, {117, 65500, -47}, },
            {{36, 65500, -10}, },
            {{36, 103, -54}, {104, 104, 1285}, {105, 65500, -58}, },
            {{36, 113, -566}, {114, 114, 1286}, {115, 65500, -55}, },
            {{36, 114, -56}, {115, 115, 1287}, {116, 65500, -40}, },
            {{36, 104, -35}, {105, 105, 1288}, {106, 65500, -35}, },
            {{36, 104, -35}, {105, 105, 1289}, {106, 65500, -35}, },
            {{36, 65500, -10}, },
            {{0, 65535, -1206}, },
            {{0, 65535, -1206}, },
            {{0, 9, 1253}, {10, 10, 1290}, {11, 65535, -1206}, },
            {{0, 41, -1134}, {42, 42, 1256}, {43, 65535, -1134}, },
            {{0, 65535, -1206}, },
            {{0, 65535, -1136}, },
            {{36, 110, -33}, {111, 111, 1291}, {112, 65500, -33}, },
            {{36, 107, -32}, {108, 108, 1292}, {109, 65500, -32}, },
            {{36, 104, -35}, {105, 105, 1293}, {106, 65500, -35}, },
            {{36, 107, -32}, {108, 108, 1294}, {109, 65500, -32}, },
            {{36, 98, -576}, {99, 99, 1295}, {100, 65500, -576}, },
            {{36, 65500, -10}, },
            {{36, 109, -557}, {110, 110, 1296}, {111, 65500, -48}, },
            {{36, 116, -559}, {117, 117, 1297}, {118, 65500, -51}, },
            {{36, 115, -47}, {116, 116, 1298}, {117, 65500, -47}, },
            {{36, 65500, -10}, },
            {{36, 114, -56}, {115, 115, 1299}, {116, 65500, -40}, },
            {{36, 95, -10}, {97, 120, 281}, {121, 121, 1300}, {122, 65500, -41}, },
            {{47, 47, 1301}, },
            {{36, 100, -43}, {101, 101, 1302}, {102, 65500, -53}, },
            {{36, 65500, -10}, },
            {{36, 98, -576}, {99, 99, 1303}, {100, 65500, -576}, },
            {{36, 95, -10}, {97, 97, 1304}, {98, 65500, -555}, },
            {{36, 95, -10}, {97, 97, 1305}, {98, 65500, -555}, },
            {{36, 65500, -10}, },
            {{36, 100, -43}, {101, 101, 1306}, {102, 65500, -53}, },
            {{36, 100, -43}, {101, 101, 1307}, {102, 65500, -53}, },
            {{36, 115, -47}, {116, 116, 1308}, {117, 65500, -47}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 101, -48}, {102, 102, 1309}, {103, 65500, -558}, },
            {{36, 65500, -10}, },
            {{36, 110, -33}, {111, 111, 1310}, {112, 65500, -33}, },
            {{36, 65500, -10}, },
            {{36, 100, -43}, {101, 101, 1311}, {102, 65500, -53}, },
            {{36, 107, -32}, {108, 108, 1312}, {109, 65500, -32}, },
            {{0, 65535, -1206}, },
            {{36, 109, -557}, {110, 110, 1313}, {111, 65500, -48}, },
            {{36, 110, -33}, {111, 111, 1314}, {112, 65500, -33}, },
            {{36, 109, -557}, {110, 110, 1315}, {111, 65500, -48}, },
            {{36, 58, -10}, {65, 76, 279}, {77, 77, 1316}, {78, 90, 279}, {95, 65500, -10}, },
            {{36, 115, -47}, {116, 116, 1317}, {117, 65500, -47}, },
            {{36, 65500, -10}, },
            {{36, 100, -43}, {101, 101, 1318}, {102, 65500, -53}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{65, 90, 1319}, {97, 122, 1320}, {170, 170, 1321}, {181, 181, 1322}, {186, 186, 1323}, {192, 214, 1324}, {216, 246, 1325}, {248, 501, 1326}, {506, 535, 1327}, {592, 680, 1328}, {688, 696, 1329}, {699, 705, 1330}, {720, 721, 1331}, {736, 740, 1332}, {890, 890, 1333}, {902, 902, 1334}, {904, 906, 1335}, {908, 908, 1336}, {910, 929, 1337}, {931, 974, 1338}, {976, 982, 1339}, {986, 986, 1340}, {988, 988, 1341}, {990, 990, 1342}, {992, 992, 1343}, {994, 1011, 1344}, {1025, 1036, 1345}, {1038, 1103, 1346}, {1105, 1116, 1347}, {1118, 1153, 1348}, {1168, 1220, 1349}, {1223, 1224, 1350}, {1227, 1228, 1351}, {1232, 1259, 1352}, {1262, 1269, 1353}, {1272, 1273, 1354}, {1329, 1366, 1355}, {1369, 1369, 1356}, {1377, 1415, 1357}, {1488, 1514, 1358}, {1520, 1522, 1359}, {1569, 1594, 1360}, {1600, 1610, 1361}, {1649, 1719, 1362}, {1722, 1726, 1363}, {1728, 1742, 1364}, {1744, 1747, 1365}, {1749, 1749, 1366}, {1765, 1766, 1367}, {2309, 2361, 1368}, {2365, 2365, 1369}, {2392, 2401, 1370}, {2437, 2444, 1371}, {2447, 2448, 1372}, {2451, 2472, 1373}, {2474, 2480, 1374}, {2482, 2482, 1375}, {2486, 2489, 1376}, {2524, 2525, 1377}, {2527, 2529, 1378}, {2544, 2545, 1379}, {2565, 2570, 1380}, {2575, 2576, 1381}, {2579, 2600, 1382}, {2602, 2608, 1383}, {2610, 2611, 1384}, {2613, 2614, 1385}, {2616, 2617, 1386}, {2649, 2652, 1387}, {2654, 2654, 1388}, {2674, 2676, 1389}, {2693, 2699, 1390}, {2701, 2701, 1391}, {2703, 2705, 1392}, {2707, 2728, 1393}, {2730, 2736, 1394}, {2738, 2739, 1395}, {2741, 2745, 1396}, {2749, 2749, 1397}, {2784, 2784, 1398}, {2821, 2828, 1399}, {2831, 2832, 1400}, {2835, 2856, 1401}, {2858, 2864, 1402}, {2866, 2867, 1403}, {2870, 2873, 1404}, {2877, 2877, 1405}, {2908, 2909, 1406}, {2911, 2913, 1407}, {2949, 2954, 1408}, {2958, 2960, 1409}, {2962, 2965, 1410}, {2969, 2970, 1411}, {2972, 2972, 1412}, {2974, 2975, 1413}, {2979, 2980, 1414}, {2984, 2986, 1415}, {2990, 2997, 1416}, {2999, 3001, 1417}, {3077, 3084, 1418}, {3086, 3088, 1419}, {3090, 3112, 1420}, {3114, 3123, 1421}, {3125, 3129, 1422}, {3168, 3169, 1423}, {3205, 3212, 1424}, {3214, 3216, 1425}, {3218, 3240, 1426}, {3242, 3251, 1427}, {3253, 3257, 1428}, {3294, 3294, 1429}, {3296, 3297, 1430}, {3333, 3340, 1431}, {3342, 3344, 1432}, {3346, 3368, 1433}, {3370, 3385, 1434}, {3424, 3425, 1435}, {3585, 3630, 1436}, {3632, 3632, 1437}, {3634, 3635, 1438}, {3648, 3654, 1439}, {3713, 3714, 1440}, {3716, 3716, 1441}, {3719, 3720, 1442}, {3722, 3722, 1443}, {3725, 3725, 1444}, {3732, 3735, 1445}, {3737, 3743, 1446}, {3745, 3747, 1447}, {3749, 3749, 1448}, {3751, 3751, 1449}, {3754, 3755, 1450}, {3757, 3758, 1451}, {3760, 3760, 1452}, {3762, 3763, 1453}, {3773, 3773, 1454}, {3776, 3780, 1455}, {3782, 3782, 1456}, {3804, 3805, 1457}, {3904, 3911, 1458}, {3913, 3945, 1459}, {4256, 4293, 1460}, {4304, 4342, 1461}, {4352, 4441, 1462}, {4447, 4514, 1463}, {4520, 4601, 1464}, {7680, 7835, 1465}, {7840, 7929, 1466}, {7936, 7957, 1467}, {7960, 7965, 1468}, {7968, 8005, 1469}, {8008, 8013, 1470}, {8016, 8023, 1471}, {8025, 8025, 1472}, {8027, 8027, 1473}, {8029, 8029, 1474}, {8031, 8061, 1475}, {8064, 8116, 1476}, {8118, 8124, 1477}, {8126, 8126, 1478}, {8130, 8132, 1479}, {8134, 8140, 1480}, {8144, 8147, 1481}, {8150, 8155, 1482}, {8160, 8172, 1483}, {8178, 8180, 1484}, {8182, 8188, 1485}, {8319, 8319, 1486}, {8450, 8450, 1487}, {8455, 8455, 1488}, {8458, 8467, 1489}, {8469, 8469, 1490}, {8472, 8477, 1491}, {8484, 8484, 1492}, {8486, 8486, 1493}, {8488, 8488, 1494}, {8490, 8497, 1495}, {8499, 8504, 1496}, {12293, 12293, 1497}, {12337, 12341, 1498}, {12353, 12436, 1499}, {12443, 12446, 1500}, {12449, 12538, 1501}, {12540, 12542, 1502}, {12549, 12588, 1503}, {12593, 12686, 1504}, {19968, 40869, 1505}, {44032, 55203, 1506}, {63744, 64045, 1507}, {64256, 64262, 1508}, {64275, 64279, 1509}, {64287, 64296, 1510}, {64298, 64310, 1511}, {64312, 64316, 1512}, {64318, 64318, 1513}, {64320, 64321, 1514}, {64323, 64324, 1515}, {64326, 64433, 1516}, {64467, 64829, 1517}, {64848, 64911, 1518}, {64914, 64967, 1519}, {65008, 65019, 1520}, {65136, 65138, 1521}, {65140, 65140, 1522}, {65142, 65276, 1523}, {65313, 65338, 1524}, {65345, 65370, 1525}, {65382, 65470, 1526}, {65474, 65479, 1527}, {65482, 65487, 1528}, {65490, 65495, 1529}, {65498, 65500, 1530}, },
            {{36, 109, -557}, {110, 110, 1531}, {111, 65500, -48}, },
            {{36, 100, -43}, {101, 101, 1532}, {102, 65500, -53}, },
            {{36, 98, -576}, {99, 99, 1533}, {100, 65500, -576}, },
            {{36, 98, -576}, {99, 99, 1534}, {100, 65500, -576}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 100, -43}, {101, 101, 1535}, {102, 65500, -53}, },
            {{36, 111, -570}, {112, 112, 1536}, {113, 65500, -570}, },
            {{36, 109, -557}, {110, 110, 1537}, {111, 65500, -48}, },
            {{36, 109, -557}, {110, 110, 1538}, {111, 65500, -48}, },
            {{36, 100, -43}, {101, 101, 1539}, {102, 65500, -53}, },
            {{36, 98, -576}, {99, 99, 1540}, {100, 65500, -576}, },
            {{36, 115, -47}, {116, 116, 1541}, {117, 65500, -47}, },
            {{36, 115, -47}, {116, 116, 1542}, {117, 65500, -47}, },
            {{36, 110, -33}, {111, 111, 1543}, {112, 65500, -33}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 36, 1544}, {46, 46, 1545}, {47, 47, 1546}, {48, 57, 1547}, {65, 90, 1548}, {95, 95, 1549}, {97, 122, 1550}, {170, 170, 1551}, {181, 181, 1552}, {186, 186, 1553}, {192, 214, 1554}, {216, 246, 1555}, {248, 501, 1556}, {506, 535, 1557}, {592, 680, 1558}, {688, 696, 1559}, {699, 705, 1560}, {720, 721, 1561}, {736, 740, 1562}, {890, 890, 1563}, {902, 902, 1564}, {904, 906, 1565}, {908, 908, 1566}, {910, 929, 1567}, {931, 974, 1568}, {976, 982, 1569}, {986, 986, 1570}, {988, 988, 1571}, {990, 990, 1572}, {992, 992, 1573}, {994, 1011, 1574}, {1025, 1036, 1575}, {1038, 1103, 1576}, {1105, 1116, 1577}, {1118, 1153, 1578}, {1168, 1220, 1579}, {1223, 1224, 1580}, {1227, 1228, 1581}, {1232, 1259, 1582}, {1262, 1269, 1583}, {1272, 1273, 1584}, {1329, 1366, 1585}, {1369, 1369, 1586}, {1377, 1415, 1587}, {1488, 1514, 1588}, {1520, 1522, 1589}, {1569, 1594, 1590}, {1600, 1610, 1591}, {1632, 1641, 1592}, {1649, 1719, 1593}, {1722, 1726, 1594}, {1728, 1742, 1595}, {1744, 1747, 1596}, {1749, 1749, 1597}, {1765, 1766, 1598}, {1776, 1785, 1599}, {2309, 2361, 1600}, {2365, 2365, 1601}, {2392, 2401, 1602}, {2406, 2415, 1603}, {2437, 2444, 1604}, {2447, 2448, 1605}, {2451, 2472, 1606}, {2474, 2480, 1607}, {2482, 2482, 1608}, {2486, 2489, 1609}, {2524, 2525, 1610}, {2527, 2529, 1611}, {2534, 2543, 1612}, {2544, 2545, 1613}, {2565, 2570, 1614}, {2575, 2576, 1615}, {2579, 2600, 1616}, {2602, 2608, 1617}, {2610, 2611, 1618}, {2613, 2614, 1619}, {2616, 2617, 1620}, {2649, 2652, 1621}, {2654, 2654, 1622}, {2662, 2671, 1623}, {2674, 2676, 1624}, {2693, 2699, 1625}, {2701, 2701, 1626}, {2703, 2705, 1627}, {2707, 2728, 1628}, {2730, 2736, 1629}, {2738, 2739, 1630}, {2741, 2745, 1631}, {2749, 2749, 1632}, {2784, 2784, 1633}, {2790, 2799, 1634}, {2821, 2828, 1635}, {2831, 2832, 1636}, {2835, 2856, 1637}, {2858, 2864, 1638}, {2866, 2867, 1639}, {2870, 2873, 1640}, {2877, 2877, 1641}, {2908, 2909, 1642}, {2911, 2913, 1643}, {2918, 2927, 1644}, {2949, 2954, 1645}, {2958, 2960, 1646}, {2962, 2965, 1647}, {2969, 2970, 1648}, {2972, 2972, 1649}, {2974, 2975, 1650}, {2979, 2980, 1651}, {2984, 2986, 1652}, {2990, 2997, 1653}, {2999, 3001, 1654}, {3047, 3055, 1655}, {3077, 3084, 1656}, {3086, 3088, 1657}, {3090, 3112, 1658}, {3114, 3123, 1659}, {3125, 3129, 1660}, {3168, 3169, 1661}, {3174, 3183, 1662}, {3205, 3212, 1663}, {3214, 3216, 1664}, {3218, 3240, 1665}, {3242, 3251, 1666}, {3253, 3257, 1667}, {3294, 3294, 1668}, {3296, 3297, 1669}, {3302, 3311, 1670}, {3333, 3340, 1671}, {3342, 3344, 1672}, {3346, 3368, 1673}, {3370, 3385, 1674}, {3424, 3425, 1675}, {3430, 3439, 1676}, {3585, 3630, 1677}, {3632, 3632, 1678}, {3634, 3635, 1679}, {3648, 3654, 1680}, {3664, 3673, 1681}, {3713, 3714, 1682}, {3716, 3716, 1683}, {3719, 3720, 1684}, {3722, 3722, 1685}, {3725, 3725, 1686}, {3732, 3735, 1687}, {3737, 3743, 1688}, {3745, 3747, 1689}, {3749, 3749, 1690}, {3751, 3751, 1691}, {3754, 3755, 1692}, {3757, 3758, 1693}, {3760, 3760, 1694}, {3762, 3763, 1695}, {3773, 3773, 1696}, {3776, 3780, 1697}, {3782, 3782, 1698}, {3792, 3801, 1699}, {3804, 3805, 1700}, {3872, 3881, 1701}, {3904, 3911, 1702}, {3913, 3945, 1703}, {4256, 4293, 1704}, {4304, 4342, 1705}, {4352, 4441, 1706}, {4447, 4514, 1707}, {4520, 4601, 1708}, {7680, 7835, 1709}, {7840, 7929, 1710}, {7936, 7957, 1711}, {7960, 7965, 1712}, {7968, 8005, 1713}, {8008, 8013, 1714}, {8016, 8023, 1715}, {8025, 8025, 1716}, {8027, 8027, 1717}, {8029, 8029, 1718}, {8031, 8061, 1719}, {8064, 8116, 1720}, {8118, 8124, 1721}, {8126, 8126, 1722}, {8130, 8132, 1723}, {8134, 8140, 1724}, {8144, 8147, 1725}, {8150, 8155, 1726}, {8160, 8172, 1727}, {8178, 8180, 1728}, {8182, 8188, 1729}, {8319, 8319, 1730}, {8450, 8450, 1731}, {8455, 8455, 1732}, {8458, 8467, 1733}, {8469, 8469, 1734}, {8472, 8477, 1735}, {8484, 8484, 1736}, {8486, 8486, 1737}, {8488, 8488, 1738}, {8490, 8497, 1739}, {8499, 8504, 1740}, {12293, 12293, 1741}, {12337, 12341, 1742}, {12353, 12436, 1743}, {12443, 12446, 1744}, {12449, 12538, 1745}, {12540, 12542, 1746}, {12549, 12588, 1747}, {12593, 12686, 1748}, {19968, 40869, 1749}, {44032, 55203, 1750}, {63744, 64045, 1751}, {64256, 64262, 1752}, {64275, 64279, 1753}, {64287, 64296, 1754}, {64298, 64310, 1755}, {64312, 64316, 1756}, {64318, 64318, 1757}, {64320, 64321, 1758}, {64323, 64324, 1759}, {64326, 64433, 1760}, {64467, 64829, 1761}, {64848, 64911, 1762}, {64914, 64967, 1763}, {65008, 65019, 1764}, {65136, 65138, 1765}, {65140, 65140, 1766}, {65142, 65276, 1767}, {65296, 65305, 1768}, {65313, 65338, 1769}, {65345, 65370, 1770}, {65382, 65470, 1771}, {65474, 65479, 1772}, {65482, 65487, 1773}, {65490, 65495, 1774}, {65498, 65500, 1775}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 115, -47}, {116, 116, 1776}, {117, 65500, -47}, },
            {{36, 110, -33}, {111, 111, 1777}, {112, 65500, -33}, },
            {{36, 100, -43}, {101, 101, 1778}, {102, 65500, -53}, },
            {{36, 100, -43}, {101, 101, 1779}, {102, 65500, -53}, },
            {{36, 99, -545}, {100, 100, 1780}, {101, 65500, -545}, },
            {{36, 65500, -10}, },
            {{36, 104, -35}, {105, 105, 1781}, {106, 65500, -35}, },
            {{36, 115, -47}, {116, 116, 1782}, {117, 65500, -47}, },
            {{36, 65500, -10}, },
            {{36, 100, -43}, {101, 101, 1783}, {102, 65500, -53}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 99, -545}, {100, 100, 1784}, {101, 65500, -545}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 65500, -1321}, },
            {{36, 114, -56}, {115, 115, 1785}, {116, 65500, -40}, },
            {{36, 101, -48}, {102, 102, 1786}, {103, 65500, -558}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 95, -10}, {97, 121, 281}, {122, 122, 1787}, {170, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 111, -570}, {112, 112, 1788}, {113, 65500, -570}, },
            {{36, 100, -43}, {101, 101, 1789}, {102, 65500, -53}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 100, -43}, {101, 101, 1790}, {102, 65500, -53}, },
            {{36, 115, -47}, {116, 116, 1791}, {117, 65500, -47}, },
            {{36, 107, -32}, {108, 108, 1792}, {109, 65500, -32}, },
            {{36, 99, -545}, {100, 100, 1793}, {101, 65500, -545}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
        }
    };*/

    private static int[][] accept;
/*  {
        // INITIAL
        {114, 114, 114, 114, 114, 114, 21, -1, 113, 31, 11, -1, 6, 9, 43, 33, 1, 27, 2, 41, 110, 110, 20, 10, 25, 14, 23, 36, 0, 113, 113, 113, 113, 113, 4, 7, 18, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 5, 15, 8, 45, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 114, 30, -1, 112, -1, 113, 113, -1, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 32, 12, 13, -1, -1, 44, 35, 34, 29, 28, -1, 109, -1, 117, 42, 109, 110, -1, 109, -1, 109, 110, -1, 109, -1, 109, 110, -1, 110, 119, 37, 26, 22, 24, 39, 113, 113, 113, 113, 19, 113, 103, 113, 113, 113, 113, 113, 113, 113, 113, 60, 113, 113, 113, 113, 113, 113, 113, 113, 113, 71, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 16, 17, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 108, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3, 109, -1, 109, 109, -1, 109, -1, -1, -1, -1, 117, 117, 117, 109, 109, -1, 109, 109, -1, 109, 110, 110, -1, -1, 109, 110, 110, 110, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 38, 40, 46, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 69, 113, 113, 113, 113, 74, 113, 113, 113, 78, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 95, 102, 113, 113, 113, -1, -1, -1, -1, -1, -1, 109, -1, -1, -1, -1, -1, -1, 116, 117, -1, -1, 109, 109, 109, 109, 109, 110, 110, 47, 113, 113, 107, 113, 113, 113, 113, 113, 113, 52, 53, 113, 55, 113, 113, 113, 113, 113, 62, 63, 113, 113, 113, 113, 70, 113, 113, 113, 113, 113, 76, 113, 113, 111, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 90, 113, 113, 94, 96, 113, 113, -1, -1, -1, -1, -1, 115, -1, -1, -1, -1, -1, 113, 113, 113, 113, 113, 113, 113, 51, 54, 56, 57, 113, 113, 113, 113, 65, 66, 68, -1, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 84, 113, 113, 87, 113, 113, 91, 113, 113, 98, -1, -1, -1, -1, -1, -1, 113, 113, 113, 113, 113, 49, 113, 113, 113, 61, 113, 113, -1, 113, 104, 113, 113, 113, 77, 113, 113, 113, 82, 83, 85, 113, 88, 113, 92, 113, 113, -1, 113, 113, 113, 113, 113, 50, 113, 59, 64, 67, -1, 113, 113, 113, 113, 79, 80, 113, 113, 113, 113, 113, 113, 113, 113, 113, 48, 58, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 113, 113, 113, 113, 113, 86, 113, 113, 97, 113, 105, 100, 113, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 113, 113, 75, 99, 81, 113, 93, 113, 113, 72, 73, 113, 113, 113, 113, 106, 101, 89, },

    };*/

    public static class State
    {
        public final static State INITIAL = new State(0);

        private int id;

        private State(@SuppressWarnings("hiding") int id)
        {
            this.id = id;
        }

        public int id()
        {
            return this.id;
        }
    }

    static 
    {
        try
        {
            DataInputStream s = new DataInputStream(
                new BufferedInputStream(
                Lexer.class.getResourceAsStream("lexer.dat")));

            // read gotoTable
            int length = s.readInt();
            gotoTable = new int[length][][][];
            for(int i = 0; i < gotoTable.length; i++)
            {
                length = s.readInt();
                gotoTable[i] = new int[length][][];
                for(int j = 0; j < gotoTable[i].length; j++)
                {
                    length = s.readInt();
                    gotoTable[i][j] = new int[length][3];
                    for(int k = 0; k < gotoTable[i][j].length; k++)
                    {
                        for(int l = 0; l < 3; l++)
                        {
                            gotoTable[i][j][k][l] = s.readInt();
                        }
                    }
                }
            }

            // read accept
            length = s.readInt();
            accept = new int[length][];
            for(int i = 0; i < accept.length; i++)
            {
                length = s.readInt();
                accept[i] = new int[length];
                for(int j = 0; j < accept[i].length; j++)
                {
                    accept[i][j] = s.readInt();
                }
            }

            s.close();
        }
        catch(Exception e)
        {
            throw new RuntimeException("The file \"lexer.dat\" is either missing or corrupted.");
        }
    }
}
