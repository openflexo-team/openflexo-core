/* This file was generated by SableCC (http://www.sablecc.org/). */

package org.openflexo.foundation.fml.parser.node;

import org.openflexo.foundation.fml.parser.analysis.*;

@SuppressWarnings("nls")
public final class AShrAssignAssignmentOperator extends PAssignmentOperator
{
    private TShrAssign _shrAssign_;

    public AShrAssignAssignmentOperator()
    {
        // Constructor
    }

    public AShrAssignAssignmentOperator(
        @SuppressWarnings("hiding") TShrAssign _shrAssign_)
    {
        // Constructor
        setShrAssign(_shrAssign_);

    }

    @Override
    public Object clone()
    {
        return new AShrAssignAssignmentOperator(
            cloneNode(this._shrAssign_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAShrAssignAssignmentOperator(this);
    }

    public TShrAssign getShrAssign()
    {
        return this._shrAssign_;
    }

    public void setShrAssign(TShrAssign node)
    {
        if(this._shrAssign_ != null)
        {
            this._shrAssign_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._shrAssign_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._shrAssign_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._shrAssign_ == child)
        {
            this._shrAssign_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._shrAssign_ == oldChild)
        {
            setShrAssign((TShrAssign) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
