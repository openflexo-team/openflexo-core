/* This file was generated by SableCC (http://www.sablecc.org/). */

package org.openflexo.foundation.fml.parser.node;

import org.openflexo.foundation.fml.parser.analysis.*;

@SuppressWarnings("nls")
public final class APlusAssignAssignmentOperator extends PAssignmentOperator
{
    private TPlusAssign _plusAssign_;

    public APlusAssignAssignmentOperator()
    {
        // Constructor
    }

    public APlusAssignAssignmentOperator(
        @SuppressWarnings("hiding") TPlusAssign _plusAssign_)
    {
        // Constructor
        setPlusAssign(_plusAssign_);

    }

    @Override
    public Object clone()
    {
        return new APlusAssignAssignmentOperator(
            cloneNode(this._plusAssign_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAPlusAssignAssignmentOperator(this);
    }

    public TPlusAssign getPlusAssign()
    {
        return this._plusAssign_;
    }

    public void setPlusAssign(TPlusAssign node)
    {
        if(this._plusAssign_ != null)
        {
            this._plusAssign_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._plusAssign_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._plusAssign_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._plusAssign_ == child)
        {
            this._plusAssign_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._plusAssign_ == oldChild)
        {
            setPlusAssign((TPlusAssign) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
