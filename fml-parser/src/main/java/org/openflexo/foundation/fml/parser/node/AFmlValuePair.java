/* This file was generated by SableCC (http://www.sablecc.org/). */

package org.openflexo.foundation.fml.parser.node;

import org.openflexo.foundation.fml.parser.analysis.*;

@SuppressWarnings("nls")
public final class AFmlValuePair extends PFmlValuePair
{
    private TIdentifier _identifier_;
    private TAssign _assign_;
    private PFmlValue _fmlValue_;

    public AFmlValuePair()
    {
        // Constructor
    }

    public AFmlValuePair(
        @SuppressWarnings("hiding") TIdentifier _identifier_,
        @SuppressWarnings("hiding") TAssign _assign_,
        @SuppressWarnings("hiding") PFmlValue _fmlValue_)
    {
        // Constructor
        setIdentifier(_identifier_);

        setAssign(_assign_);

        setFmlValue(_fmlValue_);

    }

    @Override
    public Object clone()
    {
        return new AFmlValuePair(
            cloneNode(this._identifier_),
            cloneNode(this._assign_),
            cloneNode(this._fmlValue_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAFmlValuePair(this);
    }

    public TIdentifier getIdentifier()
    {
        return this._identifier_;
    }

    public void setIdentifier(TIdentifier node)
    {
        if(this._identifier_ != null)
        {
            this._identifier_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._identifier_ = node;
    }

    public TAssign getAssign()
    {
        return this._assign_;
    }

    public void setAssign(TAssign node)
    {
        if(this._assign_ != null)
        {
            this._assign_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._assign_ = node;
    }

    public PFmlValue getFmlValue()
    {
        return this._fmlValue_;
    }

    public void setFmlValue(PFmlValue node)
    {
        if(this._fmlValue_ != null)
        {
            this._fmlValue_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._fmlValue_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._identifier_)
            + toString(this._assign_)
            + toString(this._fmlValue_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._identifier_ == child)
        {
            this._identifier_ = null;
            return;
        }

        if(this._assign_ == child)
        {
            this._assign_ = null;
            return;
        }

        if(this._fmlValue_ == child)
        {
            this._fmlValue_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._identifier_ == oldChild)
        {
            setIdentifier((TIdentifier) newChild);
            return;
        }

        if(this._assign_ == oldChild)
        {
            setAssign((TAssign) newChild);
            return;
        }

        if(this._fmlValue_ == oldChild)
        {
            setFmlValue((PFmlValue) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
