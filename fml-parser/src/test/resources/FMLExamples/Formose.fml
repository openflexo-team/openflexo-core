use org.openflexo.foundation.fml.rt.FMLTechnologyAdapter as FML;
use org.openflexo.foundation.fml.rt.FMLRTTechnologyAdapter as FML@RT;
use org.openflexo.technologyadapter.gina.GINATechnologyAdapter as GINA;

import java.lang.String;

/**
 * @uri http://formose.lacl.fr/Formose.fml
 * @version 0.1
 */
public VirtualModel Formose {
	public String projectName;
	public String projectDescription;
	public String... keywords;
	public FormoseCore formoseVMI with FML::FMLRTVirtualModelInstanceModelSlot();
	public GINAFibComponent projectUI with GINA::FIBComponentModelSlot(
			component=[ProjectUI.fib],
			assignments={data=a.binding,param1=another.binding});
	public Methodology... methodologies (
			get: {
		   		Methodology... allMethodologies = (select Methodology from this);    
	    		log ("Calcul de toutes les methodologies: " + allMethodologies)    
	    		return allMethodologies;  
			}
	);
	public DocumentAnnotation-Methodology documentAnnotationMethodology;
	public DomainModel-Methodology domainModelMethodology;
	
	public Formose create:initFormoseView (String projectName, String projectDescription) {  
	    projectName = parameters.projectName;    
	    projectDescription = parameters.projectDescription;    
	    formoseVMI = new FormoseCore.init(parameters.projectName);    
	    projectUI = projectUI.ConfigureGINAFIBComponent();    
	    documentAnnotationMethodology = DocumentAnnotation-Methodology.create();    
	    domainModelMethodology = DomainModel-Methodology.create();  
	}
	
	public delete:() {
	    projectName = null;    
	    projectDescription = null;  
	}
}

/*

@VirtualModel(uri="http://formose.lacl.fr/Formose.viewpoint")
public class Formose {

  @FMLRTVirtualModelInstanceModelSlot(cardinality=ZeroOne,readOnly=false)  
  public VirtualModelInstanceType<FormoseCore> formoseVMI;
  @FIBComponentModelSlot(cardinality=ZeroOne,readOnly=false)  
  public GINAFIBComponent projectUI;
  @PrimitiveRole(cardinality=ZeroOne,readOnly=false)  
  public String projectName;
  @PrimitiveRole(cardinality=ZeroOne,readOnly=false)  
  public String projectDescription;
  @GetSetProperty(value="methodologies", access=get)  
  public List<VirtualModelInstanceType<Methodology>> getMethodologies {  
    List<VirtualModelInstanceType<Methodology>> allMethodologies = this.FML@RT::SelectVirtualModelInstance();    
    log ("Calcul de toutes les methodologies: " + allMethodologies)    
    return allMethodologies;  
  }
  @FlexoConceptInstanceRole(cardinality=ZeroOne,readOnly=false)  
  public VirtualModelInstanceType<DocumentAnnotation-Methodology> documentAnnotationMethodology;
  @FlexoConceptInstanceRole(cardinality=ZeroOne,readOnly=false)  
  public VirtualModelInstanceType<DomainModel-Methodology> domainModelMethodology;

  @CreationScheme  
  Formose:initFormoseView(String projectName, String projectDescription) {  
    projectName = parameters.projectName;    
    projectDescription = parameters.projectDescription;    
    formoseVMI = FormoseCore.init(parameters.projectName);    
    projectUI = projectUI.ConfigureGINAFIBComponent();    
    documentAnnotationMethodology = DocumentAnnotation-Methodology.create();    
    domainModelMethodology = DomainModel-Methodology.create();  
  }  

  @DeletionScheme  
  Void delete() {  
    projectName = null;    
    projectDescription = null;  
  }  

}

*/