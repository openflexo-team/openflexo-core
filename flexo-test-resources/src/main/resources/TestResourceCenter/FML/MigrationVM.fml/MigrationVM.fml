
/**
 * 
 * @author sylvainguerin
 * @version 0.1
 */
@VirtualModel(uri="http://openflexo.org/test/TestResourceCenter/MigrationVM.fml")
public class MigrationVM {

  public Foo aFoo;

  @ActionScheme  
  Void testNewClass() {  
    String aString = new String();  
  }  

  @ActionScheme  
  Void testNewClass2() {  
    String aString = new String();    
    Date aDate = new Date();    
    if (aDate != null) {    
      String aString2 = new String();    
    } else {    
      String aString3 = new String();    
    }  
  }  

  @ActionScheme  
  Void testAddToList() {  
    ArrayList<String> aListOfString = new ArrayList<String>();    
    String aString1 = new String();    
    String aString2 = new String();    
    aListOfString.add(aString1)    
    aListOfString.add(aString2)    
    aListOfString.add(new String())  
  }  

  @ActionScheme  
  Void testAddToList2() {  
    List<Foo> allFoos = this.SelectFlexoConceptInstance(type=Foo);    
    allFoos.add(allFoos.get(0))    
    allFoos.add(this.SelectUniqueFlexoConceptInstance(type=Foo,where=true))  
  }  

  @ActionScheme  
  Void testNewInstance() {  
    Foo newFoo = Foo.create();    
    Foo.create()    
    aFoo = Foo.create2("foo");    
    Foo2 myFoo2 = Foo2.create();  
  }  

  @ActionScheme  
  Void testNewVirtualModelInstance() {  
    MigrationVM topLevelVM = MigrationVM.init("test");    
    InsideVM insideVM = InsideVM.init(42);  
  }  

  @CreationScheme  
  MigrationVM:init(String aString) {  
  
  }  

  @ActionScheme  
  Void testNewEmbeddedInstance() {  
    Foo2 myFoo2 = Foo2.create();  
  }  

  @ActionScheme  
  Void testNewEmbeddedVirtualModelInstance() {  
    InsideVM insideVM = InsideVM.init(42);  
  }  


  @FlexoConcept  
  public class Foo {  
  
    @CreationScheme    
    Foo:create() {    
      
    }    
  
    @DeletionScheme    
    Void delete() {    
      
    }    
  
    @CreationScheme    
    Foo:create2(String aString) {    
      
    }    
  
  
    @FlexoConcept    
    public class Foo2 {    
      
      @CreationScheme      
      Foo2:create() {      
          
      }      
      
      @DeletionScheme      
      Void delete() {      
          
      }      
      
    }    
  
  }  

  @FlexoConcept  
  public class Foo2 {  
  
    @CreationScheme    
    Foo2:create() {    
      
    }    
  
    @DeletionScheme    
    Void delete() {    
      
    }    
  
  }  

}
