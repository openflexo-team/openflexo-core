import java.lang.String;

@URI("http://openflexo.org/test/TestResourceCenter/TestMultipleInheritance.fml")
@Version("0.1")
@Author("sylvain")
model TestMultipleInheritance {

	@Author("sylvain")
	concept MyConceptA {
		String foo;
		create::init () {
			log("CreationScheme in A");
			if ((foo == null)) {
				foo = "A";
			}
		}
		delete::_delete () {
		}
		doSomething () {
			log("Do something in A");
			return 42;
		}
	}

	@Author("sylvain")
	concept MyConceptB extends MyConceptA {
		create::init () {
			super.init();
			log("CreationScheme in B");
			foo = (foo + "B");
		}
		delete::_delete () {
		}
		doSomething () {
			log("Do something in B");
			return (super.doSomething() * 2);
		}
	}

	@Author("sylvain")
	concept MyConceptC extends MyConceptA {
		delete::_delete () {
		}
		create::init () {
			super.init();
			log("CreationScheme in C");
			foo = (foo + "C");
		}
		doSomething () {
			log("Do something in C");
			return (super.doSomething() * 3);
		}
	}

	@Author("sylvain")
	concept MyConceptD extends MyConceptB,MyConceptC {
		create::init () {
			super_MyConceptB.init();
			super_MyConceptC.init();
			log("CreationScheme in D");
			foo = (foo + "D");
		}
		delete::_delete () {
		}
		doSomething () {
			log("Do something in D");
			return (super_MyConceptB.doSomething() + super_MyConceptC.doSomething());
		}
	}
}