use org.openflexo.foundation.fml.rt.FMLRTVirtualModelInstanceModelSlot as FMLRT;

import java.lang.String;

import ["http://openflexo.org/test/TestResourceCenter/TestMatchFlexoConceptInstance.fml/VM.fml"] as VM;

@URI("http://openflexo.org/test/TestResourceCenter/TestMatchFlexoConceptInstance.fml/MatchingVM.fml")
@Version("0.1")
model MatchingVM {
	VM _model with ModelInstance(isRequired = true);

	create::_create (required VM _model) {
		_model = parameters._model;
		log((">>>> Parametre model : " + parameters._model));
	}

	synchronizeUsingMatchingSet () {
		MatchingSet matchingSet = begin match MatchedConcept from (this);
		for (Concept _concept : select Concept from (_model)) {
			match MatchedConcept in (matchingSet) from (this) where (_concept=_concept) create::_create((_concept.p + "-matched"),_concept);
		}
		end match MatchedConcept in (matchingSet) delete::_delete();
	}

	defaultSynchronize () {
		for (Concept _concept : select Concept from (_model)) {
			match MatchedConcept from (this) where (_concept=_concept) create::_create((_concept.p + "-default"),_concept);
		}
	}

	concept MatchedConcept {
		Concept _concept with ConceptInstance();
		String p2;

		create::_create (required String aP2,required Concept aConcept) {
			_concept = parameters.aConcept;
			p2 = parameters.aP2;
		}
		delete::_delete () {
		}
	}
}